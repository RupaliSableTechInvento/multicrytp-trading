{"version":3,"sources":["../../src/controller/authController.js"],"names":["authController","login","req","res","next","credential","body","findOne","email","password","err","user","json","token","sign","first_name","last_name","App_key","register","console","log","params","query","save"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,iBAAiB;AACnBC,WAAO,eAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvB,YAAMC,aAAaH,IAAII,IAAvB;AACA,6BAAWC,OAAX,CAAmB,EAACC,OAAOH,WAAWG,KAAnB,EAA0BC,UAAUJ,WAAWI,QAA/C,EAAnB,EAA6E,UAACC,GAAD,EAAMC,IAAN,EAAe;AACxF,gBAAID,GAAJ,EAASP,IAAIS,IAAJ,CAASF,GAAT;AACT,gBAAIC,SAAS,IAAb,EAAmB;AACf,oBAAME,QAAQ,uBAAIC,IAAJ,CAAS;AACnBN,2BAAOG,KAAKH,KADO;AAEnBO,gCAAYJ,KAAKI,UAFE;AAGnBC,+BAAWL,KAAKK;AAHG,iBAAT,EAIX,cAAIC,OAJO,CAAd;AAKAd,oBAAIS,IAAJ,CAAS,EAACC,YAAD,EAAT;AACH,aAPD,MAOO;AACHV,oBAAIS,IAAJ,CAAS,+BAAT;AACH;AACJ,SAZD;AAaH,KAhBkB;;AAkBnBM,cAAU,kBAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5Be,gBAAQC,GAAR,CAAY,UAAZ,EAAuBlB,IAAII,IAA3B,EAAgCJ,IAAImB,MAApC,EAA2CnB,IAAIoB,KAA/C;AACE,YAAIX,OAAO,yBAAeT,IAAII,IAAnB,CAAX;AACAK,aAAKY,IAAL,CAAUrB,IAAII,IAAd,EAAoB,UAAUI,GAAV,EAAeC,IAAf,EAAqB;AACrC,gBAAID,GAAJ,EAAS,OAAOP,IAAIS,IAAJ,CAASF,GAAT,CAAP;AACTP,gBAAIS,IAAJ,CAASD,IAAT;AACH,SAHD;AAIH;AAzBkB,CAAvB;;kBA4BeX,c","file":"authController.js","sourcesContent":["import usersModel from './../models/usersModel';\nimport jwt from 'jsonwebtoken';\nimport env from \"../env\";\n\nconst authController = {\n    login: (req, res, next) => {\n        const credential = req.body;\n        usersModel.findOne({email: credential.email, password: credential.password}, (err, user) => {\n            if (err) res.json(err);\n            if (user !== null) {\n                const token = jwt.sign({\n                    email: user.email,\n                    first_name: user.first_name,\n                    last_name: user.last_name\n                }, env.App_key);\n                res.json({token})\n            } else {\n                res.json(\"email or password incorrect !\")\n            }\n        });\n    },\n\n    register: (req, res, next) => {\n      console.log(\"req.body\",req.body,req.params,req.query)\n        let user = new usersModel(req.body);\n        user.save(req.body, function (err, user) {\n            if (err) return res.json(err);\n            res.json(user)\n        })\n    },\n};\n\nexport default authController;\n"]}
{"version":3,"sources":["../../src/controller/tradeController.js"],"names":["mongoose","require","tradeController","getAll","req","res","next","find","err","trade","json","getOne","findById","params","id","create","body","_id","user","tradeInfo","findOneAndUpdate","user_id","UpdateUser","update","new","delete","remove","ok","Types","ObjectId"],"mappings":"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","file":"tradeController.js","sourcesContent":["import postatrade from '../models/postatrade'\r\nimport tradeMoreInfo from '../models/tradeMoreInfo'\r\nimport usersModel from '../models/usersModel'\r\n\r\nvar mongoose = require('mongoose');\r\n\r\nconst tradeController = {\r\n\r\n    getAll: async (req, res, next) => {\r\n        postatrade.find({}, (err, trade) => {\r\n            if (err) return res.json(err);\r\n            res.json(trade);\r\n        });\r\n    },\r\n\r\n    getOne: (req, res, next) => {\r\n        postatrade.findById(req.params.id, (err, trade) => {\r\n            res.json(trade || {});\r\n        });\r\n    },\r\n\r\n    create: (req, res, next) => {\r\n        postatrade.create(req.body, function (err, trade) {\r\n            if (err) return res.json(err);\r\n            else{\r\n              tradeMoreInfo.create({'trade_id':trade._id,'user_id':trade.user},function (err, tradeInfo) {\r\n                if (err) return res.json(err);\r\n                else{\r\n                  usersModel.findOneAndUpdate({'_id':tradeInfo.user_id},{\"trade_info\":tradeInfo._id},function (err, UpdateUser) {\r\n                    if (err) return res.json(err);\r\n                    res.json(UpdateUser)\r\n                  })\r\n                }\r\n              })\r\n            }\r\n        })\r\n    },\r\n\r\n    update: (req, res, next) => {\r\n        postatrade.findOneAndUpdate(req.params.id, req.body, {new: true}, (err, trade) => {\r\n            if (err) return res.json(err);\r\n            res.json(trade)\r\n        });\r\n    },\r\n\r\n    delete: (req, res, next) => {\r\n        postatrade.remove({_id: req.params.id}, (err, ok) => {\r\n            if (err) return res.json(err);\r\n        });\r\n        res.json(true)\r\n    },\r\n\r\n    update: (req, res, next) => {\r\n      var id = mongoose.Types.ObjectId(req.body.id);\r\n        postatrade.findOneAndUpdate({'_id':id}, req.body, {new: true}, (err, user) => {\r\n            if (err) return res.json(err);\r\n            res.json(user)\r\n        });\r\n    },\r\n};\r\n\r\nexport default tradeController;\r\n"]}
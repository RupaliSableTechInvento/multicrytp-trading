{"version":3,"sources":["../../src/controller/tradeController.js"],"names":["mongoose","require","tradeController","getAll","req","res","next","find","err","trade","json","isError","data","getByCurrencyLoc","request","Object","assign","query","limit","skip","count","parseInt","getOne","findById","params","id","x","create","body","user","_id","first_name","userObj","firstName","console","log","tradeInfo","findOneAndUpdate","user_id","UpdateUser","update","new","delete","remove","ok","Types","ObjectId"],"mappings":"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","file":"tradeController.js","sourcesContent":["import postatrade from '../models/postatrade'\r\nimport tradeMoreInfo from '../models/tradeMoreInfo'\r\nimport usersModel from '../models/usersModel'\r\nimport async from 'async';\r\n\r\nvar mongoose = require('mongoose');\r\n\r\nconst tradeController = {\r\n\r\n  getAll: async(req, res, next) => {\r\n    postatrade.find({}, (err, trade) => {\r\n      if (err) return res.json({ isError: true, data: err });\r\n      res.json({ isError: false, data: trade });\r\n    });\r\n  },\r\n\r\n  getByCurrencyLoc: async(req, res, next) => {\r\n    var request = Object.assign({}, req.query);\r\n    delete request.limit;\r\n    delete request.skip;\r\n    postatrade.find(request, async(err, trade) => {\r\n      if (err) return res.json({ isError: true, data: err });\r\n      res.json({ isError: false, data: trade, count: await postatrade.find(request).count() }, )\r\n\r\n    }).limit(parseInt(req.query.limit) || '').skip(parseInt(req.query.skip) || 0)\r\n\r\n  },\r\n\r\n  getOne: (req, res, next) => {\r\n    postatrade.findById(req.params.id, (err, trade) => {\r\n      if (err) {\r\n        x ``\r\n        res.json({ isError: true, data: err });\r\n      }\r\n      res.json({ isError: false, data: trade });\r\n    });\r\n  },\r\n\r\n  create: async(req, res, next) => {\r\n\r\n    var params = req.body;\r\n\r\n    var userObj = await usersModel.find({ '_id': req.body.user }, { _id: 0, first_name: 1 });\r\n\r\n    /*  params.firstName = await usersModel.findOne({ '_id': req.body.user }, { _id: 0, first_name: 1 }, (err, user) => {\r\n       if (err) {\r\n         res.json({ isError: true, data: err });\r\n       } else { res.json({ isError: false, data: user }); }\r\n     }); */\r\n    params.firstName = userObj[0].first_name;\r\n    console.log(\"params name =\", params.firstName);\r\n\r\n    postatrade.create(params, function(err, trade) {\r\n      if (err) return res.json({ isError: true, data: err });\r\n      else {\r\n        tradeMoreInfo.create({ 'trade_id': trade._id, 'user_id': trade.user }, function(err, tradeInfo) {\r\n          if (err) return res.json({ isError: true, data: err });\r\n          else {\r\n            usersModel.findOneAndUpdate({ '_id': tradeInfo.user_id }, { \"trade_info\": tradeInfo._id }, function(err, UpdateUser) {\r\n              if (err) return res.json({ isError: true, data: err });\r\n              res.json({ isError: false, data: UpdateUser })\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  },\r\n\r\n  update: (req, res, next) => {\r\n    postatrade.findOneAndUpdate(req.params.id, req.body, { new: true }, (err, trade) => {\r\n      if (err) return res.json({ isError: true, data: err });\r\n      res.json({ isError: false, data: trade })\r\n    });\r\n  },\r\n\r\n  delete: (req, res, next) => {\r\n    postatrade.remove({ _id: req.params.id }, (err, ok) => {\r\n      if (err) return res.json({ isError: true, data: err });\r\n    });\r\n    res.json({ isError: false, data: true })\r\n  },\r\n\r\n  update: (req, res, next) => {\r\n    var id = mongoose.Types.ObjectId(req.body.id);\r\n    postatrade.findOneAndUpdate({ '_id': id }, req.body, { new: true }, (err, user) => {\r\n      if (err) return res.json({ isError: true, data: err });\r\n      res.json({ isError: false, data: user })\r\n    });\r\n  },\r\n};\r\n\r\nexport default tradeController;"]}
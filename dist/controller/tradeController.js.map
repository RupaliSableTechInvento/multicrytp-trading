{"version":3,"sources":["../../src/controller/tradeController.js"],"names":["tradeController","getAll","req","res","next","find","err","trade","json","getOne","findById","params","id","create","body","update","findOneAndUpdate","new","delete","remove","_id","ok"],"mappings":";;;;;;AAAA;;;;;;;;AAEA,IAAMA,kBAAkB;;AAEpBC;AAAA,2EAAQ,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AACJ,iDAAWC,IAAX,CAAgB,EAAhB,EAAoB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAChC,oCAAID,GAAJ,EAAS,OAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACTH,oCAAIK,IAAJ,CAASD,KAAT;AACH,6BAHD;;AADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAR;;AAAA;AAAA;AAAA;AAAA,OAFoB;;AASpBE,YAAQ,gBAACP,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,6BAAWM,QAAX,CAAoBR,IAAIS,MAAJ,CAAWC,EAA/B,EAAmC,UAACN,GAAD,EAAMC,KAAN,EAAgB;AAC/CJ,gBAAIK,IAAJ,CAASD,SAAS,EAAlB;AACH,SAFD;AAGH,KAbmB;;AAepBM,YAAQ,gBAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,6BAAWS,MAAX,CAAkBX,IAAIY,IAAtB,EAA4B,UAAUR,GAAV,EAAeC,KAAf,EAAsB;AAC9C,gBAAID,GAAJ,EAAS,OAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACTH,gBAAIK,IAAJ,CAASD,KAAT;AACH,SAHD;AAIH,KApBmB;;AAsBpBQ,YAAQ,gBAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,6BAAWY,gBAAX,CAA4Bd,IAAIS,MAAJ,CAAWC,EAAvC,EAA2CV,IAAIY,IAA/C,EAAqD,EAACG,KAAK,IAAN,EAArD,EAAkE,UAACX,GAAD,EAAMC,KAAN,EAAgB;AAC9E,gBAAID,GAAJ,EAAS,OAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACTH,gBAAIK,IAAJ,CAASD,KAAT;AACH,SAHD;AAIH,KA3BmB;;AA6BpBW,YAAQ,iBAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,6BAAWe,MAAX,CAAkB,EAACC,KAAKlB,IAAIS,MAAJ,CAAWC,EAAjB,EAAlB,EAAwC,UAACN,GAAD,EAAMe,EAAN,EAAa;AACjD,gBAAIf,GAAJ,EAAS,OAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACZ,SAFD;AAGAH,YAAIK,IAAJ,CAAS,IAAT;AACH;AAlCmB,CAAxB;;kBAqCeR,e","file":"tradeController.js","sourcesContent":["import postatrade from '../models/postatrade'\r\n\r\nconst tradeController = {\r\n\r\n    getAll: async (req, res, next) => {\r\n        postatrade.find({}, (err, trade) => {\r\n            if (err) return res.json(err);\r\n            res.json(trade);\r\n        });\r\n    },\r\n\r\n    getOne: (req, res, next) => {\r\n        postatrade.findById(req.params.id, (err, trade) => {\r\n            res.json(trade || {});\r\n        });\r\n    },\r\n\r\n    create: (req, res, next) => {\r\n        postatrade.create(req.body, function (err, trade) {\r\n            if (err) return res.json(err);\r\n            res.json(trade)\r\n        })\r\n    },\r\n\r\n    update: (req, res, next) => {\r\n        postatrade.findOneAndUpdate(req.params.id, req.body, {new: true}, (err, trade) => {\r\n            if (err) return res.json(err);\r\n            res.json(trade)\r\n        });\r\n    },\r\n\r\n    delete: (req, res, next) => {\r\n        postatrade.remove({_id: req.params.id}, (err, ok) => {\r\n            if (err) return res.json(err);\r\n        });\r\n        res.json(true)\r\n    }\r\n};\r\n\r\nexport default tradeController;\r\n"]}
{"version":3,"sources":["../../src/controller/tradeController.js"],"names":["mongoose","require","tradeController","getAll","req","res","next","find","err","trade","json","isError","data","getOne","findById","params","id","create","body","_id","user","tradeInfo","findOneAndUpdate","user_id","UpdateUser","update","new","delete","remove","ok","Types","ObjectId"],"mappings":"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","file":"tradeController.js","sourcesContent":["import postatrade from '../models/postatrade'\r\nimport tradeMoreInfo from '../models/tradeMoreInfo'\r\nimport usersModel from '../models/usersModel'\r\n\r\nvar mongoose = require('mongoose');\r\n\r\nconst tradeController = {\r\n\r\n    getAll: async (req, res, next) => {\r\n        postatrade.find({}, (err, trade) => {\r\n            if (err) return res.json({isError:true,data:err});\r\n            res.json({isError:false,data:trade});\r\n        });\r\n    },\r\n\r\n    getOne: (req, res, next) => {\r\n        postatrade.findById(req.params.id, (err, trade) => {\r\n          if (err) {\r\n\r\n            res.json({isError:true,data:err});\r\n          }\r\n          res.json({isError:false,data:trade});\r\n        });\r\n    },\r\n\r\n    create: (req, res, next) => {\r\n        postatrade.create(req.body, function (err, trade) {\r\n            if (err) return res.json({isError:true,data:err});\r\n            else{\r\n              tradeMoreInfo.create({'trade_id':trade._id,'user_id':trade.user},function (err, tradeInfo) {\r\n                if (err) return res.json({isError:true,data:err});\r\n                else{\r\n                  usersModel.findOneAndUpdate({'_id':tradeInfo.user_id},{\"trade_info\":tradeInfo._id},function (err, UpdateUser) {\r\n                    if (err) return res.json({isError:true,data:err});\r\n                    res.json({isError:false,data:UpdateUser})\r\n                  })\r\n                }\r\n              })\r\n            }\r\n        })\r\n    },\r\n\r\n    update: (req, res, next) => {\r\n        postatrade.findOneAndUpdate(req.params.id, req.body, {new: true}, (err, trade) => {\r\n            if (err) return res.json({isError:true,data:err});\r\n            res.json({isError:false,data:trade})\r\n        });\r\n    },\r\n\r\n    delete: (req, res, next) => {\r\n        postatrade.remove({_id: req.params.id}, (err, ok) => {\r\n            if (err) return res.json({isError:true,data:err});\r\n        });\r\n        res.json({isError:false,data:true})\r\n    },\r\n\r\n    update: (req, res, next) => {\r\n      var id = mongoose.Types.ObjectId(req.body.id);\r\n        postatrade.findOneAndUpdate({'_id':id}, req.body, {new: true}, (err, user) => {\r\n            if (err) return res.json({isError:true,data:err});\r\n            res.json({isError:false,data:user})\r\n        });\r\n    },\r\n};\r\n\r\nexport default tradeController;\r\n"]}
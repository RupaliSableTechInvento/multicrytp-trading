{"version":3,"sources":["../../src/controller/messagesController.js"],"names":["path","require","bodyParser","users","keys","module","exports","app","io","use","json","urlencoded","extended","email","global","arrImgURL","friends","pending","all_friends","curentUserEmail","friendsData","sockets","on","socket","console","log","id","token","decoded","verify","App_key","isEmailFound","find","item","push","socketId","forEach","findOneAndUpdate","$set","isActive","_id","err","doc","res","tempImgURL","list","slice","length","i","status","senderEmail","to","emit","senderEmailList","map","aField","$in","imgURL","lean","exec","msgObj","sender","senderName","data","dataObj","date","Date","isRead","last_name","first_name","user","create","message","index","reciever","msg","post","req","setHeader","friend","models","body","my_handle","friend_handle","send","update","handle","$push","name","upsert","confirm"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,aAAaD,QAAQ,aAAR,CAAjB;AACA,IAAIE,QAAQ,EAAZ;AACA,IAAIC,OAAO,EAAX;;AAGAC,OAAOC,OAAP,GAAiB,UAASC,GAAT,EAAcC,EAAd,EAAkB;AACjC,MAAID,MAAMA,GAAV;AACA,MAAIC,KAAKA,EAAT;AACAD,MAAIE,GAAJ,CAAQP,WAAWQ,IAAX,EAAR;AACAH,MAAIE,GAAJ,CAAQP,WAAWS,UAAX,CAAsB;AAC5BC,cAAU;AADkB,GAAtB,CAAR;;AAIA,MAAIC,QAAQC,OAAOD,KAAP,IAAgB,IAA5B;AACA,MAAIE,YAAY,EAAhB;AACA,MAAIC,UAAU,EAAd;AACA,MAAIC,UAAU,EAAd;AACA,MAAIC,cAAc,EAAlB;AACA,MAAIC,kBAAkB,EAAtB;AACA,MAAIC,cAAc,EAAlB;AACAZ,KAAGa,OAAH,CAAWC,EAAX,CAAc,YAAd,EAA4B,UAASC,MAAT,EAAiB;AAC3CC,YAAQC,GAAR,CAAY,kBAAZ,EAAgCF,OAAOG,EAAvC;;AAGAH,WAAOD,EAAP,CAAU,eAAV,EAA2B,UAASK,KAAT,EAAgB;AACzCH,cAAQC,GAAR,CAAY,kBAAZ,EAAgCE,KAAhC;AACA,UAAIC,UAAU,uBAAIC,MAAJ,CAAWF,KAAX,EAAkB,cAAIG,OAAtB,CAAd;AACAX,wBAAkBS,QAAQf,KAA1B;AACA,UAAMkB,eAAe5B,MAAM6B,IAAN,CAAW;AAAA,eAAQC,QAAQA,KAAKpB,KAAb,IAAsBoB,KAAKpB,KAAL,IAAcM,eAA5C;AAAA,OAAX,CAArB;AACA;AACA,UAAI,CAACY,YAAL,EAAmB;AACjB5B,cAAM+B,IAAN,CAAW;AACPrB,iBAAOM,eADA;AAEPgB,oBAAUZ,OAAOG;AAFV,SAAX;AAIE;AACH,OAND,MAMO;;AAELvB,cAAMiC,OAAN,CAAc,gBAAQ;AAClB,cAAIH,KAAKpB,KAAL,IAAcM,eAAlB,EAAmC;AACjCc,iBAAKpB,KAAL,GAAaM,eAAb;AACAc,iBAAKE,QAAL,GAAgBZ,OAAOG,EAAvB;AAED;;AAED;AACA;AACD,SATH;AAUE;AACH;;AAGD,UAAIP,eAAJ,EAAqB;AACnB,6BAAWkB,gBAAX,CAA4B,EAAE,SAASlB,eAAX,EAA5B,EAA0D,EAAEmB,MAAM,EAAEC,UAAU,QAAZ,EAAR,EAA1D,EAA4F,EAAEvB,SAAS,CAAX,EAAcwB,KAAK,CAAnB,EAA5F,EAAoH,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACrI,cAAID,GAAJ,EAAS;AACPjB,oBAAQC,GAAR,CAAY,2BAAZ,EAAyCgB,GAAzC;AACAE,gBAAIjC,IAAJ,CAAS+B,GAAT;AAED,WAJD,MAIO;;AAELxB,sBAAU,EAAV;AACA,gBAAI2B,aAAa,EAAjB;AACA1B,0BAAc,EAAd;AACAM,oBAAQC,GAAR,CAAY,SAAZ,EAAuBiB,GAAvB;;AAEA,gBAAIG,OAAOH,IAAI1B,OAAJ,CAAY8B,KAAZ,EAAX;AACA9B,sBAAU,EAAV;AACAD,wBAAY,EAAZ;AACA,gBAAI8B,KAAKE,MAAL,GAAc,CAAlB,EAAqB;AACnBvB,sBAAQC,GAAR,CAAY,mBAAZ;AACA,mBAAK,IAAIuB,CAAT,IAAcH,IAAd,EAAoB;AAClB,oBAAIA,KAAKG,CAAL,EAAQC,MAAR,IAAkB,QAAtB,EAAgC;AAC9BjC,0BAAQkB,IAAR,CAAaW,KAAKG,CAAL,CAAb;AACA7C,wBAAMiC,OAAN,CAAc,gBAAQ;AACpB,wBAAIH,KAAKpB,KAAL,IAAcgC,KAAKG,CAAL,EAAQE,WAAR,IAAuBjB,KAAKpB,KAA9C,EAAqD;AACnDL,yBAAG2C,EAAH,CAAMlB,KAAKE,QAAX,EAAqBiB,IAArB,CAA0B,WAA1B,EAAuCjC,eAAvC;AACAX,yBAAG4C,IAAH,CAAQ,YAAR,EAAsBjC,eAAtB;AACD;AACF,mBALD;AAOD,iBATD,MASO,IAAI0B,KAAKG,CAAL,EAAQC,MAAR,IAAkB,SAAtB,EAAiC;AACtChC,0BAAQiB,IAAR,CAAaW,KAAKG,CAAL,CAAb;AACD,iBAFM,MAEA;AACL;AACD;AACF;;AAGD,kBAAIK,kBAAkBrC,QAAQsC,GAAR,CAAY,UAASC,MAAT,EAAiB;AACjD,uBAAOA,OAAOL,WAAd;AACD,eAFqB,CAAtB;AAGA,mCAAWlB,IAAX,CAAgB,EAAE,SAAS,EAAEwB,KAAKH,eAAP,EAAX,EAAhB,EAAuD,EAAEI,QAAQ,CAAV,EAAa5C,OAAO,CAApB,EAAuB2B,KAAK,CAA5B,EAAvD,EAAwFkB,IAAxF,GAA+FC,IAA/F,CAAoG,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACxH,oBAAIhB,GAAJ,EAAS,CAER,CAFD,MAEO;AACL;AACArB,gCAAc;AACZJ,6BAASA,OADG;AAEZD,+BAAW0C;AAFC,mBAAd;;AAKAjD,qBAAG2C,EAAH,CAAM5B,OAAOG,EAAb,EAAiB0B,IAAjB,CAAsB,aAAtB,EAAqChC,WAArC;AACAZ,qBAAG2C,EAAH,CAAM5B,OAAOG,EAAb,EAAiB0B,IAAjB,CAAsB,cAAtB,EAAsCnC,OAAtC;AACD;AAEF,eAdD;AAgBD;AACD;AACA;AACD;AACF,SA1DD;AA2DD;AAGF,KA3FD;;AA6FAM,WAAOD,EAAP,CAAU,iBAAV,EAA6B,UAASsC,MAAT,EAAiB;AAC5C,UAAIhC,UAAU,uBAAIC,MAAJ,CAAW+B,OAAOjC,KAAlB,EAAyB,cAAIG,OAA7B,CAAd;AACA,UAAI+B,SAASjC,QAAQf,KAArB;AACA,UAAIiD,aAAa,EAAjB;AACA,UAAIC,OAAOH,OAAOI,OAAlB;AACAD,WAAKF,MAAL,GAAcA,MAAd;AACAE,WAAKE,IAAL,GAAY,IAAIC,IAAJ,EAAZ;AACAH,WAAKI,MAAL,GAAc,KAAd;;AAEA,2BAAWnC,IAAX,CAAgB,EAAEnB,OAAOgD,MAAT,EAAhB,EAAmC,EAAEO,WAAW,CAAb,EAAgBC,YAAY,CAA5B,EAA+B7B,KAAK,CAApC,EAAnC,EAA4E,UAASC,GAAT,EAAc6B,IAAd,EAAoB;AAC9F,YAAI7B,GAAJ,EAAS;AACPE,cAAIjC,IAAJ,CAAS+B,GAAT;AACD,SAFD,MAEO;AACLqB,uBAAaQ,KAAK,CAAL,EAAQD,UAAR,GAAqB,GAArB,GAA2BC,KAAK,CAAL,EAAQF,SAAhD;AACA5C,kBAAQC,GAAR,CAAY,eAAZ,EAA6BqC,UAA7B;AACAC,eAAKD,UAAL,GAAkBA,UAAlB;;AAEA,kCAAcS,MAAd,CAAqBR,IAArB,EAA2B,UAAStB,GAAT,EAAc+B,OAAd,EAAuB;AAChD,gBAAI/B,GAAJ,EAAS;AAAEjB,sBAAQC,GAAR,CAAY,sBAAZ,EAAoCgB,GAApC;AAA0C,aAArD,MAA2D;AACzDtC,oBAAMiC,OAAN,CAAc,UAACH,IAAD,EAAOwC,KAAP,EAAiB;AAC7B,oBAAIxC,QAAQA,KAAKpB,KAAL,IAAckD,KAAKW,QAA/B,EAAyC;AACvClD,0BAAQC,GAAR,CAAY,oBAAZ,EAAkCQ,KAAKpB,KAAvC,EAA8CkD,KAAKW,QAAnD;AACAlE,qBAAG2C,EAAH,CAAMlB,KAAKE,QAAX,EAAqBiB,IAArB,CAA0B,sBAA1B,EAAkDoB,OAAlD;AACD;AACF,eALD;AAOD;AACF,WAVD;AAYD;AAGF,OAvBD;AA0BD,KAnCD;;AAqCApE,SAAKmB,OAAOG,EAAZ,IAAkBb,KAAlB;;AAEAU,WAAOD,EAAP,CAAU,eAAV,EAA2B,UAASqD,GAAT,EAAc;AACvC;AACAnE,SAAG4C,IAAH,CAAQ,OAAR,EAAiBuB,GAAjB;AACD,KAHD;;AAKApD,WAAOD,EAAP,CAAU,YAAV,EAAwB,YAAW;AACjCE,cAAQC,GAAR,CAAY,gBAAZ,EAA8BF,OAAOG,EAArC;;AAEA,2BAAWW,gBAAX,CAA4B,EAAE,SAASlB,eAAX,EAA5B,EAA0D,EAAEmB,MAAM,EAAEC,UAAU,UAAZ,EAAR,EAA1D,EACE,UAASE,GAAT,EAAcC,GAAd,EAAmB;AACjB,YAAID,GAAJ,EAAS;AACP;AACD,SAFD,MAEO;AACL;AACD;AACF,OAPH;;AAUA,aAAOlB,OAAOG,EAAd;AAED,KAfD;AAgBA;AACA;AACA;AACD,GAhKD;;AAsKAnB,MAAIqE,IAAJ,CAAS,iBAAT,EAA4B,UAASC,GAAT,EAAclC,GAAd,EAAmB;AAC7CA,QAAImC,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAnC,QAAImC,SAAJ,CAAc,6BAAd,EAA6C,0CAA7C;AACAC,aAAS,IAAT;AACAC,WAAOV,IAAP,CAAYtC,IAAZ,CAAiB,EAAE,UAAU6C,IAAII,IAAJ,CAASC,SAArB,EAAgC,gBAAgBL,IAAII,IAAJ,CAASE,aAAzD,EAAjB,EAA2F,UAAS1C,GAAT,EAAcC,GAAd,EAAmB;AAC5G,UAAID,GAAJ,EAAS;AAAEE,YAAIjC,IAAJ,CAAS+B,GAAT;AAAgB,OAA3B,MAAiC,IAAIC,IAAIK,MAAJ,IAAc,CAAlB,EAAqB;;AAEpDJ,YAAIyC,IAAJ,CAAS,8BAAT;AACD,OAHgC,MAG1B;;AAELJ,eAAOV,IAAP,CAAYe,MAAZ,CAAmB;AACjBC,kBAAQT,IAAII,IAAJ,CAASC;AADA,SAAnB,EAEG;AACDK,iBAAO;AACLvE,qBAAS;AACPwE,oBAAMX,IAAII,IAAJ,CAASE,aADR;AAEPlC,sBAAQ;AAFD;AADJ;AADN,SAFH,EASG;AACDwC,kBAAQ;AADP,SATH,EAWG,UAAShD,GAAT,EAAcC,GAAd,EAAmB;AACpB,cAAID,GAAJ,EAAS;AAAEE,gBAAIjC,IAAJ,CAAS+B,GAAT;AAAgB;AAC3B;AACA;AACA;AACD,SAhBD;AAiBAjC,WAAG2C,EAAH,CAAMhD,MAAM0E,IAAII,IAAJ,CAASE,aAAf,CAAN,EAAqC/B,IAArC,CAA0C,SAA1C,EAAqDyB,IAAII,IAAzD;AACD;AACF,KAzBD;AA0BD,GA9BD;;AAgCA1E,MAAIqE,IAAJ,CAAS,2BAAT,EAAsC,UAASC,GAAT,EAAclC,GAAd,EAAmB;AACvD;AACA,QAAIkC,IAAII,IAAJ,CAASS,OAAT,IAAoB,KAAxB,EAA+B;AAC7BV,aAAOV,IAAP,CAAYtC,IAAZ,CAAiB;AACf,kBAAU6C,IAAII,IAAJ,CAASE,aADJ;AAEf,wBAAgBN,IAAII,IAAJ,CAASC;AAFV,OAAjB,EAGG,UAASzC,GAAT,EAAcC,GAAd,EAAmB;AACpB,YAAID,GAAJ,EAAS;AACPE,cAAIjC,IAAJ,CAAS+B,GAAT;AACD,SAFD,MAEO,IAAIC,IAAIK,MAAJ,IAAc,CAAlB,EAAqB;AAC1B;AACA;AACAJ,cAAIyC,IAAJ,CAAS,iCAAT;AACD,SAJM,MAIA;AACLJ,iBAAOV,IAAP,CAAYe,MAAZ,CAAmB;AACjB,sBAAUR,IAAII,IAAJ,CAASC,SADF;AAEjB,4BAAgBL,IAAII,IAAJ,CAASE;AAFR,WAAnB,EAGG;AACD,oBAAQ;AACN,kCAAoB;AADd;AADP,WAHH,EAOG,UAAS1C,GAAT,EAAcC,GAAd,EAAmB;AACpB,gBAAID,GAAJ,EAAS;AAAEE,kBAAIjC,IAAJ,CAAS+B,GAAT;AAAgB,aAA3B,MAAiC;;AAE/B;AACAjC,iBAAG2C,EAAH,CAAMhD,MAAM0E,IAAII,IAAJ,CAASE,aAAf,CAAN,EAAqC/B,IAArC,CAA0C,QAA1C,EAAoDyB,IAAII,IAAJ,CAASC,SAA7D;AACA1E,iBAAG2C,EAAH,CAAMhD,MAAM0E,IAAII,IAAJ,CAASC,SAAf,CAAN,EAAiC9B,IAAjC,CAAsC,QAAtC,EAAgDyB,IAAII,IAAJ,CAASE,aAAzD;AACD;AACF,WAdD;AAeAH,iBAAOV,IAAP,CAAYe,MAAZ,CAAmB;AACjBC,oBAAQT,IAAII,IAAJ,CAASE;AADA,WAAnB,EAEG;AACDI,mBAAO;AACLvE,uBAAS;AACPwE,sBAAMX,IAAII,IAAJ,CAASC,SADR;AAEPjC,wBAAQ;AAFD;AADJ;AADN,WAFH,EASG,EAAEwC,QAAQ,IAAV,EATH,EASqB,UAAShD,GAAT,EAAcC,GAAd,EAAmB;AACtC,gBAAID,GAAJ,EAAS;AAAEE,kBAAIjC,IAAJ,CAAS+B,GAAT;AAAgB;AAC3B;AACA;AACA;AACD,WAdD;AAeD;AACF,OA1CD;AA2CD,KA5CD,MA4CO;;AAGLuC,aAAOV,IAAP,CAAYe,MAAZ,CAAmB;AACjB,kBAAUR,IAAII,IAAJ,CAASC;AADF,OAAnB,EAEG;AACD,iBAAS;AACP,qBAAW;AACT,oBAAQL,IAAII,IAAJ,CAASE;AADR;AADJ;AADR,OAFH,EAQG,UAAS1C,GAAT,EAAcC,GAAd,EAAmB;AACpB,YAAID,GAAJ,EAAS;AAAEE,cAAIjC,IAAJ,CAAS+B,GAAT;AAAgB,SAA3B,MAAiC;AAC/B;AACD;AACF,OAZD;AAaD;AACF,GA/DD;AAiED,CAtRD","file":"messagesController.js","sourcesContent":["import usersModel from '../models/usersModel'\r\nimport messagesModel from '../models/messagesModel'\r\nimport jwt from 'jsonwebtoken';\r\nimport env from \"../env\";\r\n\r\nimport { globalAgent } from 'http';\r\nvar path = require('path');\r\nvar bodyParser = require('body-parser');\r\nvar users = [];\r\nvar keys = {};\r\n\r\n\r\nmodule.exports = function(app, io) {\r\n  var app = app;\r\n  var io = io;\r\n  app.use(bodyParser.json());\r\n  app.use(bodyParser.urlencoded({\r\n    extended: true\r\n  }));\r\n\r\n  var email = global.email || null;\r\n  var arrImgURL = [];\r\n  var friends = [];\r\n  var pending = [];\r\n  var all_friends = [];\r\n  var curentUserEmail = '';\r\n  var friendsData = {};\r\n  io.sockets.on('connection', function(socket) {\r\n    console.log(\"On Connection =>\", socket.id);\r\n\r\n\r\n    socket.on('getActiveList', function(token) {\r\n      console.log(\"getActiveList=>>\", token);\r\n      var decoded = jwt.verify(token, env.App_key);\r\n      curentUserEmail = decoded.email;\r\n      const isEmailFound = users.find(item => item && item.email && item.email == curentUserEmail);\r\n      //console.log(\"isEmailFound in users\", users, isEmailFound);\r\n      if (!isEmailFound) {\r\n        users.push({\r\n            email: curentUserEmail,\r\n            socketId: socket.id\r\n          })\r\n          // console.log(\"Email Not present=>\", users, curentUserEmail);\r\n      } else {\r\n\r\n        users.forEach(item => {\r\n            if (item.email == curentUserEmail) {\r\n              item.email = curentUserEmail;\r\n              item.socketId = socket.id;\r\n\r\n            }\r\n\r\n            // item.email = curentUserEmail,\r\n            //   item.socketId = socket.id\r\n          })\r\n          // console.log(\"Email present=>\", users, curentUserEmail);\r\n      }\r\n\r\n\r\n      if (curentUserEmail) {\r\n        usersModel.findOneAndUpdate({ \"email\": curentUserEmail }, { $set: { isActive: \"active\" } }, { friends: 1, _id: 0 }, function(err, doc) {\r\n          if (err) {\r\n            console.log(\"error in io connection.=>\", err);\r\n            res.json(err);\r\n\r\n          } else {\r\n\r\n            pending = [];\r\n            var tempImgURL = '';\r\n            all_friends = [];\r\n            console.log(\"list==>\", doc);\r\n\r\n            var list = doc.friends.slice();\r\n            friends = [];\r\n            arrImgURL = [];\r\n            if (list.length > 0) {\r\n              console.log(\"List is not empty\");\r\n              for (var i in list) {\r\n                if (list[i].status == \"Friend\") {\r\n                  friends.push(list[i]);\r\n                  users.forEach(item => {\r\n                    if (item.email && list[i].senderEmail == item.email) {\r\n                      io.to(item.socketId).emit('friend_Ol', curentUserEmail);\r\n                      io.emit('friend_all', curentUserEmail);\r\n                    }\r\n                  })\r\n\r\n                } else if (list[i].status == \"Pending\") {\r\n                  pending.push(list[i]);\r\n                } else {\r\n                  continue;\r\n                }\r\n              }\r\n\r\n\r\n              var senderEmailList = friends.map(function(aField) {\r\n                return aField.senderEmail;\r\n              })\r\n              usersModel.find({ \"email\": { $in: senderEmailList } }, { imgURL: 1, email: 1, _id: 0 }).lean().exec(function(err, imgURL) {\r\n                if (err) {\r\n\r\n                } else {\r\n                  // console.log(\"friends ==>\", curentUserEmail, friends);\r\n                  friendsData = {\r\n                    friends: friends,\r\n                    arrImgURL: imgURL\r\n                  }\r\n\r\n                  io.to(socket.id).emit('friend_list', friendsData);\r\n                  io.to(socket.id).emit('pending_list', pending);\r\n                }\r\n\r\n              });\r\n\r\n            }\r\n            // console.log(\"friendData=>\", friendsData);\r\n            //  io.emit('users', users);\r\n          }\r\n        });\r\n      }\r\n\r\n\r\n    })\r\n\r\n    socket.on('private_message', function(msgObj) {\r\n      var decoded = jwt.verify(msgObj.token, env.App_key);\r\n      var sender = decoded.email;\r\n      var senderName = '';\r\n      var data = msgObj.dataObj;\r\n      data.sender = sender;\r\n      data.date = new Date();\r\n      data.isRead = false;\r\n\r\n      usersModel.find({ email: sender }, { last_name: 1, first_name: 1, _id: 0 }, function(err, user) {\r\n        if (err) {\r\n          res.json(err);\r\n        } else {\r\n          senderName = user[0].first_name + \" \" + user[0].last_name;\r\n          console.log(\"Sender Name=>\", senderName);\r\n          data.senderName = senderName;\r\n\r\n          messagesModel.create(data, function(err, message) {\r\n            if (err) { console.log(\"Error in add message\", err) } else {\r\n              users.forEach((item, index) => {\r\n                if (item && item.email == data.reciever) {\r\n                  console.log(\"Reciever found=>> \", item.email, data.reciever);\r\n                  io.to(item.socketId).emit('Notification_for_msg', message);\r\n                }\r\n              })\r\n\r\n            }\r\n          })\r\n\r\n        }\r\n\r\n\r\n      });\r\n\r\n\r\n    });\r\n\r\n    keys[socket.id] = email;\r\n\r\n    socket.on('group message', function(msg) {\r\n      // //console.log(msg);\r\n      io.emit('group', msg);\r\n    });\r\n\r\n    socket.on('disconnect', function() {\r\n      console.log(\"disconned call\", socket.id);\r\n\r\n      usersModel.findOneAndUpdate({ \"email\": curentUserEmail }, { $set: { isActive: \"inactive\" } },\r\n        function(err, doc) {\r\n          if (err) {\r\n            // res.json(err);\r\n          } else {\r\n            //console.log(\"logout=>\", doc)\r\n          }\r\n        });\r\n\r\n\r\n      delete socket.id;\r\n\r\n    });\r\n    // socket.on('reconnect', function() {\r\n    //   console.log(\"soket reconnceting..\");\r\n    // })\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  app.post('/friend_request', function(req, res) {\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.setHeader(\"Access-Control-Allow-Method\", \"'GET, POST, OPTIONS, PUT, PATCH, DELETE'\");\r\n    friend = true;\r\n    models.user.find({ \"handle\": req.body.my_handle, \"friends.name\": req.body.friend_handle }, function(err, doc) {\r\n      if (err) { res.json(err); } else if (doc.length != 0) {\r\n\r\n        res.send(\"Friend request already sent \");\r\n      } else {\r\n\r\n        models.user.update({\r\n          handle: req.body.my_handle\r\n        }, {\r\n          $push: {\r\n            friends: {\r\n              name: req.body.friend_handle,\r\n              status: \"Pending\"\r\n            }\r\n          }\r\n        }, {\r\n          upsert: true\r\n        }, function(err, doc) {\r\n          if (err) { res.json(err); }\r\n          //            else{\r\n          //                //console.log(doc);\r\n          //            }\r\n        });\r\n        io.to(users[req.body.friend_handle]).emit('message', req.body);\r\n      }\r\n    });\r\n  });\r\n\r\n  app.post('/friend_request/confirmed', function(req, res) {\r\n    //console.log(\"friend request confirmed : \" + req.body);\r\n    if (req.body.confirm == \"Yes\") {\r\n      models.user.find({\r\n        \"handle\": req.body.friend_handle,\r\n        \"friends.name\": req.body.my_handle\r\n      }, function(err, doc) {\r\n        if (err) {\r\n          res.json(err);\r\n        } else if (doc.length != 0) {\r\n          //console.log(\"Friend request confirmed : \" + doc.length);\r\n          //console.log(\"Friend request confirmed : friend request already sent \" + doc);\r\n          res.send(\"Friend request already accepted\");\r\n        } else {\r\n          models.user.update({\r\n            \"handle\": req.body.my_handle,\r\n            \"friends.name\": req.body.friend_handle\r\n          }, {\r\n            '$set': {\r\n              \"friends.$.status\": \"Friend\"\r\n            }\r\n          }, function(err, doc) {\r\n            if (err) { res.json(err); } else {\r\n\r\n              //console.log(\"friend request confirmed : Inside yes confirmed\");\r\n              io.to(users[req.body.friend_handle]).emit('friend', req.body.my_handle);\r\n              io.to(users[req.body.my_handle]).emit('friend', req.body.friend_handle);\r\n            }\r\n          });\r\n          models.user.update({\r\n            handle: req.body.friend_handle\r\n          }, {\r\n            $push: {\r\n              friends: {\r\n                name: req.body.my_handle,\r\n                status: \"Friend\"\r\n              }\r\n            }\r\n          }, { upsert: true }, function(err, doc) {\r\n            if (err) { res.json(err); }\r\n            //            else{\r\n            //                //console.log(doc);\r\n            //            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n\r\n\r\n      models.user.update({\r\n        \"handle\": req.body.my_handle\r\n      }, {\r\n        '$pull': {\r\n          'friends': {\r\n            \"name\": req.body.friend_handle,\r\n          }\r\n        }\r\n      }, function(err, doc) {\r\n        if (err) { res.json(err); } else {\r\n          //console.log(\"No\");\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n}"]}
{"version":3,"sources":["../../src/controller/messagesController.js"],"names":["path","require","bodyParser","module","exports","app","io","console","log","use","json","urlencoded","extended","email","global","users","keys","friends","pending","all_friends","on","socket","id","to","emit","findOneAndUpdate","$set","isActive","_id","err","doc","res","list","slice","i","status","push","msg","split","models","messages","create","Date","post","req","setHeader","friend","user","find","body","my_handle","friend_handle","length","send","update","handle","$push","name","upsert","confirm"],"mappings":"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","file":"messagesController.js","sourcesContent":["import usersModel from '../models/usersModel'\r\nimport { globalAgent } from 'http';\r\nvar path = require('path');\r\nvar bodyParser = require('body-parser');\r\n\r\nmodule.exports = function(app, io) {\r\n  console.log(\"global\");\r\n  var app = app;\r\n  var io = io;\r\n  app.use(bodyParser.json());\r\n  app.use(bodyParser.urlencoded({\r\n    extended: true\r\n  }));\r\n\r\n  var email = global.email || '';\r\n  console.log(\"Email id in messages Controller=>\", email);\r\n  var users = {};\r\n  var keys = {};\r\n  var friends = [];\r\n  var pending = [];\r\n  var all_friends = [];\r\n\r\n  if (email) {\r\n    io.on('connection', function(socket) {\r\n      console.log(\"Connection :User is connected  \" + email);\r\n      console.log(\"Connection : \" + socket.id);\r\n      io.to(socket.id).emit('handle', email);\r\n      users[email] = email;\r\n      keys[socket.id] = socket.id;\r\n      console.log(\"Users list : \" + users);\r\n      console.log(\"keys list : \" + keys);\r\n      usersModel.findOneAndUpdate({ \"email\": email }, { $set: { isActive: \"active\" } }, { friends: 1, _id: 0 }, function(err, doc) {\r\n        if (err) { res.json(err); } else {\r\n          friends = [];\r\n          pending = [];\r\n          all_friends = [];\r\n          console.log(\"friends list: \" + doc);\r\n          var list = doc.friends.slice();\r\n          console.log(list);\r\n\r\n          for (var i in list) {\r\n            if (list[i].status == \"Friend\") {\r\n              friends.push(list[i]);\r\n            } else if (list[i].status == \"Pending\") {\r\n              pending.push(list[i]);\r\n            } else {\r\n              continue;\r\n            }\r\n          }\r\n\r\n          console.log(\"pending list: \" + pending);\r\n          console.log(\"friends list: \" + friends);\r\n          io.to(socket.id).emit('friend_list', friends);\r\n          io.to(socket.id).emit('pending_list', pending);\r\n          io.emit('users', users);\r\n        }\r\n      });\r\n\r\n\r\n      socket.on('group message', function(msg) {\r\n        console.log(msg);\r\n        io.emit('group', msg);\r\n      });\r\n\r\n      socket.on('private message', function(msg) {\r\n        console.log('message  :' + msg.split(\"#*@\")[0]);\r\n        models.messages.create({\r\n          \"message\": msg.split(\"#*@\")[1],\r\n          \"sender\": msg.split(\"#*@\")[2],\r\n          \"reciever\": msg.split(\"#*@\")[0],\r\n          \"date\": new Date()\r\n        });\r\n        io.to(users[msg.split(\"#*@\")[0]]).emit('private message', msg);\r\n      });\r\n\r\n      socket.on('disconnect', function() {\r\n        console.log(\"disconned call\", email);\r\n        usersModel.findOneAndUpdate({ \"email\": email }, { $set: { isActive: \"inactive\" } },\r\n          function(err, doc) {\r\n            if (err) { res.json(err); } else {\r\n              console.log(\"logout=>\", doc)\r\n            }\r\n          });\r\n\r\n        delete users[keys[socket.id]];\r\n        delete keys[socket.id];\r\n        io.emit('users', users);\r\n        console.log(users);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  app.post('/friend_request', function(req, res) {\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.setHeader(\"Access-Control-Allow-Method\", \"'GET, POST, OPTIONS, PUT, PATCH, DELETE'\");\r\n    friend = true;\r\n    models.user.find({ \"handle\": req.body.my_handle, \"friends.name\": req.body.friend_handle }, function(err, doc) {\r\n      if (err) { res.json(err); } else if (doc.length != 0) {\r\n        console.log(\"Friend request : \" + doc.length);\r\n        console.log(\"Friend request : friend request already sent \" + doc);\r\n        res.send(\"Friend request already sent \");\r\n      } else {\r\n        console.log(\"Friend request : \" + doc.length);\r\n        models.user.update({\r\n          handle: req.body.my_handle\r\n        }, {\r\n          $push: {\r\n            friends: {\r\n              name: req.body.friend_handle,\r\n              status: \"Pending\"\r\n            }\r\n          }\r\n        }, {\r\n          upsert: true\r\n        }, function(err, doc) {\r\n          if (err) { res.json(err); }\r\n          //            else{\r\n          //                console.log(doc);\r\n          //            }\r\n        });\r\n        io.to(users[req.body.friend_handle]).emit('message', req.body);\r\n      }\r\n    });\r\n  });\r\n\r\n  app.post('/friend_request/confirmed', function(req, res) {\r\n    console.log(\"friend request confirmed : \" + req.body);\r\n    if (req.body.confirm == \"Yes\") {\r\n      models.user.find({\r\n        \"handle\": req.body.friend_handle,\r\n        \"friends.name\": req.body.my_handle\r\n      }, function(err, doc) {\r\n        if (err) {\r\n          res.json(err);\r\n        } else if (doc.length != 0) {\r\n          console.log(\"Friend request confirmed : \" + doc.length);\r\n          console.log(\"Friend request confirmed : friend request already sent \" + doc);\r\n          res.send(\"Friend request already accepted\");\r\n        } else {\r\n          models.user.update({\r\n            \"handle\": req.body.my_handle,\r\n            \"friends.name\": req.body.friend_handle\r\n          }, {\r\n            '$set': {\r\n              \"friends.$.status\": \"Friend\"\r\n            }\r\n          }, function(err, doc) {\r\n            if (err) { res.json(err); } else {\r\n\r\n              console.log(\"friend request confirmed : Inside yes confirmed\");\r\n              io.to(users[req.body.friend_handle]).emit('friend', req.body.my_handle);\r\n              io.to(users[req.body.my_handle]).emit('friend', req.body.friend_handle);\r\n            }\r\n          });\r\n          models.user.update({\r\n            handle: req.body.friend_handle\r\n          }, {\r\n            $push: {\r\n              friends: {\r\n                name: req.body.my_handle,\r\n                status: \"Friend\"\r\n              }\r\n            }\r\n          }, { upsert: true }, function(err, doc) {\r\n            if (err) { res.json(err); }\r\n            //            else{\r\n            //                console.log(doc);\r\n            //            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n\r\n      console.log(\"friend request confirmed : Inside No confirmed\");\r\n      models.user.update({\r\n        \"handle\": req.body.my_handle\r\n      }, {\r\n        '$pull': {\r\n          'friends': {\r\n            \"name\": req.body.friend_handle,\r\n          }\r\n        }\r\n      }, function(err, doc) {\r\n        if (err) { res.json(err); } else {\r\n          console.log(\"No\");\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n}"]}
{"version":3,"sources":["../../src/controller/usersController.js"],"names":["nodemailer","require","mongoose","encode","hashCode","usersController","getAll","req","res","next","find","err","users","json","isError","data","getOne","decoded","verify","headers","App_key","findOne","email","user","create","body","update","findOneAndUpdate","id","new","delete","isActive","ok","changePassword","result","d","Date","v","setMinutes","getMinutes","token","sign","exp","Math","floor","console","log","createTestAccount","account","transporter","createTransport","service","auth","pass","mailOptions","from","to","subject","text","html","sendMail","error","info","messageId","getTestMessageUrl","storeBasicUserInfo","emailVarification","emailVarified","params","dt","checkDate","$set","varifyToken","redirect","resetPassword","password","value","new_pasword","$and","recoverPassword","length","changeEmail","new_email"],"mappings":"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","file":"usersController.js","sourcesContent":["import usersModel from '../models/usersModel'\r\nimport postatrade from '../models/postatrade'\r\nimport jwt from 'jsonwebtoken';\r\nimport env from \"../env\";\r\nconst nodemailer = require('nodemailer');\r\nvar mongoose = require('mongoose');\r\nvar encode = require( 'hashcode' ).hashCode;\r\nconst usersController = {\r\n\r\n  getAll: async (req, res, next) => {\r\n    usersModel.find({}, (err, users) => {\r\n      if (err) return res.json({isError:true,data:err});\r\n      res.json({isError:false,data:users});\r\n    });\r\n  },\r\n\r\n  getOne: (req, res, next) => {\r\n     // console.log(\"------------\",next);\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    usersModel.findOne({'email':decoded.email}, (err, user) => {\r\n      if (err) {\r\n        res.json({isError:true,data:err});\r\n      }\r\n      else{res.json({isError:false,data:user});}\r\n    });\r\n  },\r\n\r\n  create: (req, res, next) => {\r\n    usersModel.create(req.body, function(err, user) {\r\n      if (err) return res.json({isError:true,data:err});\r\n      res.json({isError:false,data:user})\r\n    })\r\n  },\r\n\r\n  update: (req, res, next) => {\r\n    // var id = mongoose.Types.ObjectId(req.body.id);\r\n    usersModel.findOneAndUpdate({\r\n      '_id': req.body.id\r\n    }, req.body, {\r\n      new: true\r\n    }, (err, user) => {\r\n      if (err) return res.json({isError:true,data:err});\r\n      res.json({isError:false,data:user})\r\n    });\r\n  },\r\n\r\n  delete: (req, res, next) => {\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    usersModel.findOneAndUpdate({\r\n      'email': decoded.email\r\n    },{isActive:'inactive'}, (err, ok) => {\r\n      if (err) return res.json({isError:true,data:err});\r\n      else{\r\n        res.json({isError:true,data:true})\r\n      }\r\n    });\r\n  },\r\n  changePassword: (req, res, next) => {\r\n    var email= req.body.email;\r\n    usersModel.find({\r\n      'email': req.body.email\r\n    }, function(err, result) {\r\n      if (err) {\r\n        res.json({isError:true,data:err})\r\n      } else {\r\n        if (result != \"\") {\r\n          var d = new Date();\r\n          var v = new Date();\r\n          v.setMinutes(d.getMinutes() + 30);\r\n          const token = jwt.sign({\r\n            exp: Math.floor(v),\r\n            email: req.body.email,\r\n          }, env.App_key);\r\n          console.log(result);\r\n          nodemailer.createTestAccount((err, account) => {\r\n            // create reusable transporter object using the default SMTP transport\r\n            var transporter = nodemailer.createTransport({\r\n              service: 'gmail',\r\n              auth: {\r\n                user: 'mailerabhi111@gmail.com',\r\n                pass: 'Abhi@1234'\r\n              }\r\n            });\r\n\r\n            // setup email data with unicode symbols\r\n            let mailOptions = {\r\n              from: 'mailerabhi111@gmail.com', // sender address\r\n              to: email, // list of receivers\r\n              subject: 'Change Password', // Subject line\r\n              text: 'Please Click below link to change password', // plain text body\r\n              html: '<a href=http://localhost:3000/cp/' + token + '>Click Here</a>' // html body\r\n            };\r\n\r\n            // send mail with defined transport object\r\n            transporter.sendMail(mailOptions, (error, info) => {\r\n              if (error) {\r\n                return console.log(\"error--11--\", error);\r\n                res.json({isError:true,data:error});\r\n              } else {\r\n                console.log('Message sent: %s', info.messageId);\r\n                console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\r\n                res.json({isError:false,data:'Please check your Email'});\r\n              }\r\n              // Preview only available when sending through an Ethereal account\r\n              // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\r\n              // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\r\n            });\r\n        //    res.json(mailOptions);\r\n          });\r\n        } else {\r\n          res.json({isError:true,data:'please provide a valid mail'});\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n  storeBasicUserInfo: (req, res, next) => {\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    var id = req.body.id;\r\n    usersModel.findOneAndUpdate({\r\n      'email': decoded.email\r\n    }, {\r\n      'basicInfo': req.body\r\n    }, {\r\n      new: true\r\n    }, (err, user) => {\r\n      if (err) return res.json({isError:true,data:err});\r\n      res.json({isError:false,data:user})\r\n    });\r\n  },\r\n\r\n  emailVarification: (req, res, next) => {\r\n    var email=req.body.email;\r\n    usersModel.find({\r\n      'email': req.body.email\r\n    }, function(err, result) {\r\n      if (err) {\r\n        res.json({isError:true,data:err})\r\n      } else {\r\n        if (result != \"\") {\r\n          var d = new Date();\r\n          var v = new Date();\r\n          v.setMinutes(d.getMinutes() + 30);\r\n          const token = jwt.sign({\r\n            exp: Math.floor(v),\r\n            email: req.body.email,\r\n          }, env.App_key);\r\n          console.log(result);\r\n          nodemailer.createTestAccount((err, account) => {\r\n            // create reusable transporter object using the default SMTP transport\r\n            var transporter = nodemailer.createTransport({\r\n              service: 'gmail',\r\n              auth: {\r\n                user: 'mailerabhi111@gmail.com',\r\n                pass: 'Abhi@1234'\r\n              }\r\n            });\r\n            let mailOptions = {\r\n              from: 'mailerabhi111@gmail.com', // sender address\r\n              to: email, // list of receivers\r\n              subject: 'Change Password', // Subject line\r\n              text: 'Please Click below link to change password', // plain text body\r\n              html: 'Please<a href=http://localhost:3000/ev/' + token + '>Click Here</a>' // html body\r\n            };\r\n            transporter.sendMail(mailOptions, (error, info) => {\r\n              if (error) {\r\n                res.json({isError:true,data:error});\r\n                return console.log(\"error--11--\", error);\r\n              } else {\r\n                console.log('Message sent: %s', info.messageId);\r\n                console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\r\n                res.json({isError:false,data:'Please check your email'});\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          res.json({isError:true,data:'please provide a valid mail'});\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n  emailVarified: (req, res, next) => {\r\n    var decoded = jwt.verify(req.params.token, env.App_key);\r\n    var dt = new Date();\r\n    var checkDate = new Date(decoded.exp);\r\n    if (dt < checkDate) {\r\n      console.log(\"----------\");\r\n      usersModel.findOneAndUpdate({\r\n        \"email\": decoded.email\r\n      }, {\r\n        $set: {\r\n          \"varification.email_varified\": \"varified\"\r\n        }\r\n      }, (err, user) => {\r\n        if (err) return res.json({isError:true,data:err});\r\n        res.json({isError:false,data:\"email_varified\"});\r\n      });\r\n    } else {\r\n      res.json({isError:true,data:\"session expire\"});\r\n    }\r\n  },\r\n\r\n  varifyToken: (req, res, next) => {\r\n    var decoded = jwt.verify(req.params.token, env.App_key);\r\n    var dt = new Date();\r\n    var checkDate = new Date(decoded.exp);\r\n    if (dt < checkDate) {\r\n      console.log(\"----\");\r\n\r\n      var d = new Date();\r\n      var v = new Date();\r\n      v.setMinutes(d.getMinutes() + 60);\r\n      const token = jwt.sign({\r\n        exp: Math.floor(v),\r\n        email: decoded.email,\r\n      }, env.App_key);\r\n      res.redirect('/recover/' + token)\r\n    } else {\r\n      res.json({isError:true,data:\"session expire\"});\r\n    }\r\n  },\r\n  resetPassword: (req, res, next) => {\r\n    // console.log(\"+++++++++++\",);\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n      req.body.password=encode().value(req.body.password);\r\n      req.body.new_pasword=encode().value(req.body.new_pasword);\r\n      usersModel.findOneAndUpdate({\r\n        $and: [{\r\n          \"password\": req.body.password\r\n        }, {\r\n          \"email\": decoded.email\r\n        }]\r\n      }, {\r\n        $set: {\r\n          \"password\": req.body.new_pasword\r\n        }\r\n      }, (err, user) => {\r\n        if (err) return res.json({isError:true,data:err});\r\n        res.json({isError:false,data:user});\r\n      })\r\n  },\r\n  recoverPassword: (req, res, next) => {\r\n    var decoded = jwt.verify(req.body.token, env.App_key);\r\n    if (req.body.password != \"\" && req.body.password.length > 6) {\r\n      req.body.password=encode().value(req.body.password);\r\n      var dt = new Date();\r\n      var checkDate = new Date(decoded.exp);\r\n      if (dt < checkDate) {\r\n        usersModel.findOneAndUpdate({\r\n          \"email\": decoded.email\r\n        }, {\r\n          $set: {\r\n            \"password\": req.body.password\r\n          }\r\n        }, (err, user) => {\r\n          if (err) return res.json(err);\r\n          res.json({isError:false,data:user});\r\n        });\r\n      } else {\r\n        res.json({isError:true,data:\"session expire\"});\r\n      }\r\n    }\r\n    else{\r\n        res.json({isError:true,data:\"Please provide valid password\"});\r\n    }\r\n\r\n  },\r\n  changeEmail: (req, res, next) => {\r\n    if (req.body.new_email) {\r\n      req.body.password=encode().value(req.body.password);\r\n      usersModel.findOneAndUpdate({\r\n        $and: [{\r\n          \"password\": req.body.password\r\n        }, {\r\n          \"email\": req.body.email\r\n        }]\r\n      }, {\r\n        $set: {\r\n          \"email\": req.body.new_email\r\n        }\r\n      }, (err, user) => {\r\n        if (err) return res.json({isError:true,data:err});\r\n        res.json({isError:false,data:user});\r\n      })\r\n    } else {\r\n      res.json({isError:true,data:\"NULL\"});\r\n    }\r\n  },\r\n\r\n};\r\n\r\n\r\n\r\nexport default usersController;\r\n"]}
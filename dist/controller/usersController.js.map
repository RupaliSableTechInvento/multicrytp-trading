{"version":3,"sources":["../../src/controller/usersController.js"],"names":["nodemailer","require","mongoose","encode","hashCode","usersController","getFriendsList","req","res","next","decoded","verify","headers","App_key","console","log","email","find","err","users","json","isError","data","friendReq","dataObj","body","findOneAndUpdate","$push","friends","upsert","getAll","addUserInfo","new","user","success","userProfile","_id","Number","query","id","findOne","tokenData","sort","limit","getOne","create","update","delete","isActive","ok","forgetPassword","host","result","d","Date","v","setMinutes","getMinutes","token","sign","exp","Math","floor","createTestAccount","account","transporter","createTransport","service","auth","pass","mailOptions","from","to","subject","text","html","sendMail","error","info","information","JSON","stringify","mail_response","messageId","getTestMessageUrl","storeBasicUserInfo","isVerified","emailVerification","params","emailVerified","dt","checkDate","$set","send","varifyToken","redirect","changePassword","password","value","new_pasword","$and","recoverPassword","length","changeEmail","new_email","old_password"],"mappings":"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","file":"usersController.js","sourcesContent":["import usersModel from '../models/usersModel'\r\nimport tokenModel from './../models/tokenModel';\r\n\r\nimport mail_responseModel from '../models/mail_responseModel'\r\nimport postatrade from '../models/postatrade'\r\nimport jwt from 'jsonwebtoken';\r\nimport env from \"../env\";\r\n\r\nconst nodemailer = require('nodemailer');\r\nvar mongoose = require('mongoose');\r\nvar encode = require('hashcode').hashCode;\r\nconst usersController = {\r\n\r\n  getFriendsList: (req, res, next) => {\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    console.log(\"addUserInfo\", decoded.email)\r\n    usersModel.find({\r\n      'email': decoded.email\r\n    }, { \"friends\": 1, \"_id\": 0 }, (err, users) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        isError: false,\r\n        data: users\r\n      });\r\n    });\r\n  },\r\n\r\n  friendReq: (req, res, next) => {\r\n\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    var dataObj = req.body;\r\n    console.log(dataObj);\r\n\r\n    usersModel.findOneAndUpdate({\r\n      'email': decoded.email\r\n    }, { $push: { friends: dataObj } }, {\r\n      upsert: true\r\n    }, (err, users) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        isError: false,\r\n        data: users\r\n      });\r\n    });\r\n\r\n  },\r\n\r\n\r\n  getAll: async(req, res, next) => {\r\n    usersModel.find({}, (err, users) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        isError: false,\r\n        data: users\r\n      });\r\n    });\r\n\r\n  },\r\n  addUserInfo: async(req, res, next) => {\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    usersModel.findOneAndUpdate({\r\n\r\n      'email': decoded.email\r\n    }, req.body, {\r\n      new: true\r\n    }, (err, user) => {\r\n      if (err) return res.json({\r\n        success: false,\r\n        data: err\r\n      });\r\n      res.json({\r\n        success: true,\r\n        data: user\r\n      })\r\n    });\r\n\r\n  },\r\n  userProfile: (req, res, next) => {\r\n    var _id = Number(req.query.id);\r\n    console.log(\"id=>\", _id);\r\n    usersModel.findOne({\r\n      _id: _id\r\n    }, (err, user) => {\r\n\r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        var email = user.email;\r\n        console.log(\"Email==>\", email);\r\n        tokenModel.findOne({ 'email': email }, (err, tokenData) => {\r\n          res.json({\r\n            isError: false,\r\n            data: { user: user, tokenData: tokenData }\r\n          });\r\n        }).sort({ _id: -1 }).limit(1)\r\n\r\n      }\r\n    });\r\n  },\r\n\r\n\r\n  getOne: (req, res, next) => {\r\n    // console.log(\"------------\",next);\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    usersModel.findOne({\r\n      'email': decoded.email\r\n    }, (err, user) => {\r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        res.json({\r\n          isError: false,\r\n          data: user\r\n        });\r\n      }\r\n    });\r\n  },\r\n\r\n  create: (req, res, next) => {\r\n    usersModel.create(req.body, function(err, user) {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        isError: false,\r\n        data: user\r\n      })\r\n    })\r\n  },\r\n\r\n  update: (req, res, next) => {\r\n    // var id = mongoose.Types.ObjectId(req.body.id);\r\n    usersModel.findOneAndUpdate({\r\n      '_id': req.body.id\r\n    }, req.body, {\r\n      new: true\r\n    }, (err, user) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        isError: false,\r\n        data: user\r\n      })\r\n    });\r\n  },\r\n\r\n  delete: (req, res, next) => {\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    usersModel.findOneAndUpdate({\r\n      'email': decoded.email\r\n    }, {\r\n      isActive: 'inactive'\r\n    }, (err, ok) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      else {\r\n        res.json({\r\n          isError: true,\r\n          data: true\r\n        })\r\n      }\r\n    });\r\n  },\r\n  forgetPassword: (req, res, next) => {\r\n    var email = req.body.email;\r\n    var host = req.headers.host;\r\n    console.log(\"req.domain=>\", req.headers.host);\r\n    console.log(\"email\", email);\r\n    usersModel.find({\r\n      'email': req.body.email\r\n    }, function(err, result) {\r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        })\r\n      } else {\r\n        if (result != \"\") {\r\n          var d = new Date();\r\n          var v = new Date();\r\n          v.setMinutes(d.getMinutes() + 30);\r\n          const token = jwt.sign({\r\n            exp: Math.floor(v),\r\n            email: req.body.email,\r\n          }, env.App_key);\r\n          console.log(result);\r\n          nodemailer.createTestAccount((err, account) => {\r\n            // create reusable transporter object using the default SMTP transport\r\n            var transporter = nodemailer.createTransport({\r\n              service: 'gmail',\r\n              auth: {\r\n                user: 'itstechinvento@gmail.com',\r\n                pass: 'techinvento123'\r\n              }\r\n            });\r\n\r\n            // setup email data with unicode symbols\r\n            let mailOptions = {\r\n              from: 'itstechinvento@gmail.com', // sender address\r\n              to: email, // list of receivers\r\n              subject: 'Change Password', // Subject line\r\n              text: 'Please Click below link to change password', // plain text body\r\n              html: '<a href=http://' + host + '/recover?accessToken=' + token + '>Click to recover password</a>' // html body\r\n\r\n              // html: '<a href=http://localhost:3000/recover?accessToken=' + token + '>Click to recover password</a>' // html body\r\n            };\r\n            console.log(\"Mailoptions\", mailOptions);\r\n\r\n            // send mail with defined transport object\r\n            transporter.sendMail(mailOptions, (error, info) => {\r\n              var information = JSON.stringify(info);\r\n\r\n              console.log('Transporter', err, information);\r\n              mail_responseModel.create({\r\n                'email': email,\r\n                'error': error,\r\n                'info': information\r\n              }, function(err, mail_response) {\r\n                if (err) {\r\n                  console.log(\"mail_responseModel error=>\", err);\r\n                } else {\r\n                  console.log(\"mail_responseModel No error\", mail_response);\r\n                }\r\n              })\r\n\r\n\r\n              if (error) {\r\n                return console.log(\"error--11--\", error);\r\n                res.json({\r\n                  isError: true,\r\n                  data: error\r\n                });\r\n              } else {\r\n                console.log('Message sent: %s', info.messageId);\r\n                console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\r\n                res.json({\r\n                  isError: false,\r\n                  data: 'Please check your Email'\r\n                });\r\n\r\n              }\r\n\r\n              // Preview only available when sending through an Ethereal account\r\n              // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\r\n              // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\r\n            });\r\n\r\n            // res.json({ isError: false, data: 'Please check your Email' });\r\n\r\n            //    res.json(mailOptions);\r\n          });\r\n        } else {\r\n          res.json({\r\n            isError: true,\r\n            data: 'please provide a valid mail'\r\n          });\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n  storeBasicUserInfo: (req, res, next) => {\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    var id = req.body.id;\r\n    usersModel.findOneAndUpdate({\r\n      'email': decoded.email\r\n    }, {\r\n      'basicInfo': req.body\r\n    }, {\r\n      new: true\r\n    }, (err, user) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        isError: false,\r\n        data: user\r\n      })\r\n    });\r\n  },\r\n\r\n\r\n  isVerified: (req, res, next) => {\r\n    var decoded = jwt.verify(req.query.token, env.App_key);\r\n    usersModel.findOneAndUpdate({\r\n      'email': decoded.email\r\n    }, (err, user) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        isError: false,\r\n        data: user\r\n      });\r\n    });\r\n\r\n  },\r\n\r\n  emailVerification: (req, res, next) => {\r\n    console.log(\"Email Verification=>\", req.body, req.params, req.query);\r\n    var email = req.body.email;\r\n    var host = req.headers.host;\r\n\r\n    usersModel.find({\r\n      'email': req.body.email\r\n    }, function(err, result) {\r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        })\r\n      } else {\r\n        if (result != \"\") {\r\n          var d = new Date();\r\n          var v = new Date();\r\n          v.setMinutes(d.getMinutes() + 30);\r\n          const token = jwt.sign({\r\n            exp: Math.floor(v),\r\n            email: req.body.email,\r\n          }, env.App_key);\r\n          console.log(result);\r\n          nodemailer.createTestAccount((err, account) => {\r\n            // create reusable transporter object using the default SMTP transport\r\n            var transporter = nodemailer.createTransport({\r\n              service: 'gmail',\r\n              auth: {\r\n                user: 'itstechinvento@gmail.com',\r\n                pass: 'techinvento123'\r\n              }\r\n            });\r\n            let mailOptions = {\r\n              from: 'itstechinvento@gmail.com', // sender address\r\n              to: email, // list of receivers\r\n              subject: 'Email Verification', // Subject line\r\n              text: 'Please Click below link to Verify Your Email address', // plain text body\r\n              html: 'Please<a href=http://' + host + '/ev/' + token + '>Click Here to processed email verification</a>' // html body\r\n            };\r\n            transporter.sendMail(mailOptions, (error, info) => {\r\n\r\n              mail_responseModel.create({\r\n                'email': email,\r\n                'error': error,\r\n                'info': info\r\n              }, function(err, mail_response) {\r\n                if (err) {\r\n                  console.log(\"mail_responseModel error=>\", err);\r\n                } else {\r\n                  console.log(\"mail_responseModel \", mail_response);\r\n                }\r\n              })\r\n              if (error) {\r\n                res.json({\r\n                  isError: true,\r\n                  data: error\r\n                });\r\n                return console.log(\"error--11--\", error);\r\n              } else {\r\n                console.log('Message sent: %s', info.messageId);\r\n                console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\r\n                res.json({\r\n                  isError: false,\r\n                  data: 'Please check your email'\r\n                });\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          res.json({\r\n            isError: true,\r\n            data: 'please provide a valid mail'\r\n          });\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n  emailVerified: (req, res, next) => {\r\n    var decoded = jwt.verify(req.params.token, env.App_key);\r\n    var dt = new Date();\r\n    var checkDate = new Date(decoded.exp);\r\n    if (dt < checkDate) {\r\n      console.log(\"----------\");\r\n      usersModel.findOneAndUpdate({\r\n        \"email\": decoded.email\r\n      }, {\r\n        $set: {\r\n          \"verification.email_verified\": true\r\n        }\r\n      }, (err, user) => {\r\n        if (err) return res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n        //  res.redirect('/#/profile');\r\n        res.send('verified')\r\n          //res.json({ isError: false, data: \"your E-Mail address is verified sucessfully\" });\r\n\r\n      });\r\n    } else {\r\n      res.json({\r\n        isError: true,\r\n        data: \"session expire\"\r\n      });\r\n    }\r\n  },\r\n\r\n  varifyToken: (req, res, next) => {\r\n    console.log(\"in verify Token=>\");\r\n    var decoded = jwt.verify(req.params.token, env.App_key);\r\n    var dt = new Date();\r\n    var checkDate = new Date(decoded.exp);\r\n    if (dt < checkDate) {\r\n      console.log(\"----\");\r\n      var d = new Date();\r\n      var v = new Date();\r\n      v.setMinutes(d.getMinutes() + 60);\r\n      const token = jwt.sign({\r\n        exp: Math.floor(v),\r\n        email: decoded.email,\r\n      }, env.App_key);\r\n      res.redirect('/recover/' + token)\r\n    } else {\r\n      res.json({\r\n        isError: true,\r\n        data: \"session expire\"\r\n      });\r\n    }\r\n  },\r\n  changePassword: (req, res, next) => {\r\n    // console.log(\"req.headers--->\", req.headers['authorization'], req.body);\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    req.body.password = encode().value(req.body.password);\r\n    req.body.new_pasword = encode().value(req.body.new_pasword);\r\n    usersModel.findOneAndUpdate({\r\n      $and: [{\r\n        \"password\": req.body.password\r\n      }, {\r\n        \"email\": decoded.email\r\n      }]\r\n    }, {\r\n      $set: {\r\n        \"password\": req.body.new_pasword,\r\n      }\r\n    }, (err, user) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        isError: false,\r\n        data: user\r\n      });\r\n      console.log(\"user=>\", user);\r\n    })\r\n  },\r\n  recoverPassword: (req, res, next) => {\r\n    console.log(\"req in recover password api=>\", req.body, req.query, req.params);\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    if (req.body.password != \"\" && req.body.password.length > 6) {\r\n      req.body.password = encode().value(req.body.password);\r\n      var checkDate = new Date(decoded.exp);\r\n      var dt = new Date();\r\n      console.log(dt, \"------\", checkDate);\r\n      if (dt < checkDate) {\r\n        usersModel.findOneAndUpdate({\r\n          \"email\": decoded.email\r\n        }, {\r\n          $set: {\r\n            \"password\": req.body.password\r\n          }\r\n        }, (err, user) => {\r\n          if (err) return res.json(err);\r\n          res.json({\r\n            isError: false,\r\n            data: user\r\n          });\r\n        });\r\n      } else {\r\n        res.json({\r\n          isError: true,\r\n          data: \"session expire\"\r\n        });\r\n      }\r\n    } else {\r\n      res.json({\r\n        isError: true,\r\n        data: \"Please provide valid password\"\r\n      });\r\n    }\r\n\r\n  },\r\n  changeEmail: (req, res, next) => {\r\n    if (req.body.new_email) {\r\n      req.body.password = encode().value(req.body.old_password);\r\n      usersModel.findOneAndUpdate({\r\n        $and: [{\r\n          \"password\": req.body.password\r\n        }, {\r\n          \"email\": req.body.email\r\n        }]\r\n      }, {\r\n        $set: {\r\n          \"email\": req.body.new_email,\r\n        }\r\n      }, (err, user) => {\r\n        if (err) return res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n        res.json({\r\n          isError: false,\r\n          data: user\r\n        });\r\n      })\r\n    } else {\r\n      res.json({\r\n        isError: true,\r\n        data: \"NULL\"\r\n      });\r\n    }\r\n  },\r\n\r\n\r\n};\r\n\r\n\r\nexport default usersController;"]}
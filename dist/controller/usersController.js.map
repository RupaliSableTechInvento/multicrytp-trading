{"version":3,"sources":["../../src/controller/usersController.js"],"names":["mongoose","require","usersController","getAll","req","res","next","find","err","users","json","getOne","console","log","findById","params","id","user","create","body","update","findOneAndUpdate","new","delete","remove","_id","ok","changePassword","email","result","d","Date","v","setMinutes","getMinutes","token","sign","exp","Math","floor","App_key","storeBasicUserInfo","emailVarification","emailVarified","decoded","verify","dt","checkDate","$set","varifyToken","redirect","recoverPassword","password","changeEmail","new_email","$and"],"mappings":"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","file":"usersController.js","sourcesContent":["import usersModel from '../models/usersModel'\r\nimport postatrade from '../models/postatrade'\r\nimport jwt from 'jsonwebtoken';\r\nimport env from \"../env\";\r\nvar mongoose = require('mongoose');\r\n\r\nconst usersController = {\r\n\r\n  getAll: async (req, res, next) => {\r\n    usersModel.find({}, (err, users) => {\r\n      if (err) return res.json(err);\r\n      res.json(users);\r\n    });\r\n  },\r\n\r\n  getOne: (req, res, next) => {\r\n    console.log(\"------------\");\r\n    usersModel.findById(req.params.id, (err, user) => {\r\n      res.json(user || {});\r\n    });\r\n  },\r\n\r\n  create: (req, res, next) => {\r\n    usersModel.create(req.body, function(err, user) {\r\n      if (err) return res.json(err);\r\n      res.json(user)\r\n    })\r\n  },\r\n\r\n  update: (req, res, next) => {\r\n    // var id = mongoose.Types.ObjectId(req.body.id);\r\n    usersModel.findOneAndUpdate({\r\n      '_id': req.body.id\r\n    }, req.body, {\r\n      new: true\r\n    }, (err, user) => {\r\n      if (err) return res.json(err);\r\n      res.json(user)\r\n    });\r\n  },\r\n\r\n  delete: (req, res, next) => {\r\n    usersModel.remove({\r\n      _id: req.params.id\r\n    }, (err, ok) => {\r\n      if (err) return res.json(err);\r\n    });\r\n    res.json(true)\r\n  },\r\n  changePassword: (req, res, next) => {\r\n    usersModel.find({\r\n      'email': req.body.email \r\n    }, function(err, result) {\r\n      if (err) {\r\n        res.json(err)\r\n      } else {\r\n        if (result != \"\") {\r\n          var d = new Date();\r\n          var v = new Date();\r\n          v.setMinutes(d.getMinutes() + 30);\r\n          const token = jwt.sign({\r\n            exp: Math.floor(v),\r\n            email: req.body.email,\r\n          }, env.App_key);\r\n          console.log(result);\r\n          res.json('http://localhost:3000/cp/' + token);\r\n        } else {\r\n          res.json('please provide a valid mail');\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n  storeBasicUserInfo: (req, res, next) => {\r\n      var id =req.body.id;\r\n      usersModel.findOneAndUpdate({'_id':id},{'basicInfo':req.body}, {new: true}, (err, user) => {\r\n          if (err) return res.json(err);\r\n          res.json(user)\r\n      });\r\n  },\r\n\r\n  emailVarification:(req, res, next)=>{\r\n    usersModel.find({\r\n      'email': req.body.email\r\n    }, function(err, result) {\r\n      if (err) {\r\n        res.json(err)\r\n      } else {\r\n        if (result != \"\") {\r\n          var d = new Date();\r\n          var v = new Date();\r\n          v.setMinutes(d.getMinutes() + 30);\r\n          const token = jwt.sign({\r\n            exp: Math.floor(v),\r\n            email: req.body.email,\r\n          }, env.App_key);\r\n          console.log(result);\r\n          res.json('http://localhost:3000/ev/' + token);\r\n        } else {\r\n          res.json('please provide a valid mail');\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n  emailVarified:(req, res, next)=>{\r\n    var decoded = jwt.verify(req.params.token, env.App_key);\r\n    var dt = new Date();\r\n    var checkDate=new Date(decoded.exp);\r\n    if (dt<checkDate) {\r\n      console.log(\"----------\");\r\n      usersModel.findOneAndUpdate({\"email\": decoded.email},{\r\n        $set:{\"varification.email_varified\":\"varified\"}\r\n      },(err, user) => {\r\n        if (err) return res.json(err);\r\n        res.json(user);\r\n      });\r\n    }\r\n    else{\r\n        res.json(\"session expire\");\r\n    }\r\n  },\r\n\r\n  varifyToken: (req, res, next) => {\r\n    var decoded = jwt.verify(req.params.token, env.App_key);\r\n    var dt = new Date();\r\n    var checkDate=new Date(decoded.exp);\r\n    if (dt<checkDate) {\r\n      console.log(\"----\");\r\n\r\n      var d = new Date();\r\n      var v = new Date();\r\n      v.setMinutes(d.getMinutes() + 5);\r\n      const token = jwt.sign({\r\n        exp: Math.floor(v),\r\n        email: decoded.email,\r\n      }, env.App_key);\r\n      res.redirect('/recover/'+token)\r\n    }\r\n    else{\r\n\r\n        res.json(\"session expire\");\r\n    }\r\n  },\r\n\r\n  recoverPassword: (req, res, next) => {\r\n    var decoded = jwt.verify(req.body.token, env.App_key);\r\n    var dt = new Date();\r\n    var checkDate=new Date(decoded.exp);\r\n    if (dt<checkDate) {\r\n      usersModel.findOneAndUpdate({\"email\": decoded.email},{\r\n        $set:{\"password\":req.body.password}\r\n      },(err, user) => {\r\n        if (err) return res.json(err);\r\n        res.json(user);\r\n      });\r\n    }\r\n    else{\r\n        res.json(\"session expire\");\r\n    }\r\n  },\r\n\r\n  changeEmail: (req, res, next) => {\r\n    if (req.body.new_email) {\r\n      usersModel.findOneAndUpdate({\r\n        $and: [{\r\n          \"password\": req.body.password\r\n        }, {\r\n          \"email\": req.body.email\r\n        }]\r\n      }, {\r\n        $set: {\r\n          \"email\": req.body.new_email\r\n        }\r\n      }, (err, user) => {\r\n        if (err) return res.json(err);\r\n        res.json(user);\r\n      })\r\n    } else {\r\n      res.json(\"NULL\");\r\n    }\r\n  }\r\n};\r\n\r\nexport default usersController;\r\n"]}
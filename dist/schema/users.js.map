{"version":3,"sources":["../../src/schema/users.js"],"names":["usersSchema","Schema","first_name","type","String","last_name","password","required","isActive","default","imgURL","Object","account_created","Date","phone_no","friends","Array","email","index","unique","trade_info","basicInfo","timezone","show_real_name","disable_sensetive","enable_web_notification","selling_vacation","buying_vacation","send_SMS_new_trade","send_SMS_new_online","introduction","verification","email_verified","Boolean","mobile_verified","sellerSchema","user","payment_method","price_btc","Number","currency","limit_from","limit_to","BuyerSchema","plugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACtCC,cAAY;AACVC,UAAMC;AADI,GAD0B;AAItCC,aAAW;AACTF,UAAMC;AADG,GAJ2B;AAOtCE,YAAU;AACRH,UAAMC,MADE;AAERG,cAAU;AAFF,GAP4B;AAWtCC,YAAU;AACRL,UAAMC,MADE;AAERK,aAAS;AAFD,GAX4B;AAetCC,UAAQ;AACNP,UAAMQ;AACN;AAFM,GAf8B;AAmBtCC,mBAAiB;AACfT,UAAMU,IADS;AAEfJ,aAAS,IAAII,IAAJ;AAFM,GAnBqB;AAuBtCC,YAAU;AACRX,UAAMC;AADE,GAvB4B;AA0BtCW,WAAS;AACPZ,UAAMa;;AADC,GA1B6B;AA8BtCC,SAAO;AACLd,UAAMC,MADD;AAELc,WAAO,IAFF;AAGLC,YAAQ,IAHH;AAILZ,cAAU;AAJL,GA9B+B;AAoCtCa,cAAY;AACVjB,UAAMC;AADI,GApC0B;AAuCtCiB,aAAW;AACTC,cAAU;AACRnB,YAAMC;AADE,KADD;AAITmB,oBAAgB;AACdpB,YAAMC;AADQ,KAJP;AAOToB,uBAAmB;AACjBrB,YAAMC;AADW,KAPV;AAUTqB,6BAAyB;AACvBtB,YAAMC;AADiB,KAVhB;AAaTsB,sBAAkB;AAChBvB,YAAMC;AADU,KAbT;AAgBTuB,qBAAiB;AACfxB,YAAMC;AADS,KAhBR;AAmBTwB,wBAAoB;AAClBzB,YAAMC;AADY,KAnBX;AAsBTyB,yBAAqB;AACnB1B,YAAMC;AADa,KAtBZ;AAyBT0B,kBAAc;AACZ3B,YAAMC;AADM;AAzBL,GAvC2B;AAoEtC2B,gBAAc;AACZC,oBAAgB;AACd7B,YAAM8B,OADQ;AAEdxB,eAAS;AAFK,KADJ;AAKZyB,qBAAiB;AACf/B,YAAM8B,OADS;AAEfxB,eAAS;AAFM;AALL;;AApEwB,CAApB,CAApB;AAgFA,IAAM0B,eAAe,IAAI,mBAASlC,MAAb,CAAoB;AACvCmC,QAAM;AACJjC,UAAMC;AADF,GADiC;AAIvCiC,kBAAgB;AACdlC,UAAMC;AADQ,GAJuB;AAOvCkC,aAAW;AACTnC,UAAMoC;AADG,GAP4B;AAUvCC,YAAU;AACRrC,UAAMC;AADE,GAV6B;AAavCqC,cAAY;AACVtC,UAAMoC;AADI,GAb2B;AAgBvCG,YAAU;AACRvC,UAAMoC;AADE;AAhB6B,CAApB,CAArB;;AAsBA,IAAMI,cAAc,IAAI,mBAAS1C,MAAb,CAAoB;AACtCmC,QAAM;AACJjC,UAAMC;AADF,GADgC;AAItCiC,kBAAgB;AACdlC,UAAMC;AADQ,GAJsB;AAOtCkC,aAAW;AACTnC,UAAMoC;AADG,GAP2B;AAUtCC,YAAU;AACRrC,UAAMC;AADE,GAV4B;AAatCqC,cAAY;AACVtC,UAAMoC;AADI,GAb0B;AAgBtCG,YAAU;AACRvC,UAAMoC;AADE;AAhB4B,CAApB,CAApB;;AAsBAvC,YAAY4C,MAAZ;AACA;;kBAEe5C,W","file":"users.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n\r\nconst usersSchema = new mongoose.Schema({\r\n  first_name: {\r\n    type: String,\r\n  },\r\n  last_name: {\r\n    type: String,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  isActive: {\r\n    type: String,\r\n    default: 'active'\r\n  },\r\n  imgURL: {\r\n    type: Object,\r\n    // default: \"../../assets/app/media/img/users/userProfileNew.png\"\r\n  },\r\n  account_created: {\r\n    type: Date,\r\n    default: new Date(),\r\n  },\r\n  phone_no: {\r\n    type: String,\r\n  },\r\n  friends: {\r\n    type: Array,\r\n\r\n  },\r\n  email: {\r\n    type: String,\r\n    index: true,\r\n    unique: true,\r\n    required: true\r\n  },\r\n  trade_info: {\r\n    type: String,\r\n  },\r\n  basicInfo: {\r\n    timezone: {\r\n      type: String,\r\n    },\r\n    show_real_name: {\r\n      type: String,\r\n    },\r\n    disable_sensetive: {\r\n      type: String,\r\n    },\r\n    enable_web_notification: {\r\n      type: String,\r\n    },\r\n    selling_vacation: {\r\n      type: String,\r\n    },\r\n    buying_vacation: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_trade: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_online: {\r\n      type: String,\r\n    },\r\n    introduction: {\r\n      type: String,\r\n    }\r\n  },\r\n  verification: {\r\n    email_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    mobile_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  }\r\n\r\n});\r\nconst sellerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nconst BuyerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nusersSchema.plugin(uniqueValidator);\r\n// usersSchema.plugin(autoIncrement.plugin, 'id');\r\n\r\nexport default usersSchema;"]}
{"version":3,"sources":["../../src/schema/users.js"],"names":["usersSchema","Schema","first_name","type","String","last_name","password","required","isActive","default","email","index","unique","trade_info","basicInfo","timezone","show_real_name","disable_sensetive","enable_web_notification","selling_vacation","buying_vacation","send_SMS_new_trade","send_SMS_new_online","introduction","verification","email_verified","Boolean","mobile_verified","sellerSchema","user","payment_method","price_btc","Number","currency","limit_from","limit_to","BuyerSchema","plugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACtCC,cAAY;AACVC,UAAMC;AADI,GAD0B;AAItCC,aAAW;AACTF,UAAMC;AADG,GAJ2B;AAOtCE,YAAU;AACRH,UAAMC,MADE;AAERG,cAAU;AAFF,GAP4B;AAWtCC,YAAU;AACRL,UAAMC,MADE;AAERK,aAAS;AAFD,GAX4B;AAetC;;;;AAIAC,SAAO;AACLP,UAAMC,MADD;AAELO,WAAO,IAFF;AAGLC,YAAQ,IAHH;AAILL,cAAU;AAJL,GAnB+B;AAyBtCM,cAAY;AACVV,UAAMC;AADI,GAzB0B;AA4BtCU,aAAW;AACTC,cAAU;AACRZ,YAAMC;AADE,KADD;AAITY,oBAAgB;AACdb,YAAMC;AADQ,KAJP;AAOTa,uBAAmB;AACjBd,YAAMC;AADW,KAPV;AAUTc,6BAAyB;AACvBf,YAAMC;AADiB,KAVhB;AAaTe,sBAAkB;AAChBhB,YAAMC;AADU,KAbT;AAgBTgB,qBAAiB;AACfjB,YAAMC;AADS,KAhBR;AAmBTiB,wBAAoB;AAClBlB,YAAMC;AADY,KAnBX;AAsBTkB,yBAAqB;AACnBnB,YAAMC;AADa,KAtBZ;AAyBTmB,kBAAc;AACZpB,YAAMC;AADM;AAzBL,GA5B2B;AAyDtCoB,gBAAc;AACZC,oBAAgB;AACdtB,YAAMuB,OADQ;AAEdjB,eAAS;AAFK,KADJ;AAKZkB,qBAAiB;AACfxB,YAAMuB,OADS;AAEfjB,eAAS;AAFM;AALL;;AAzDwB,CAApB,CAApB;AAqEA,IAAMmB,eAAe,IAAI,mBAAS3B,MAAb,CAAoB;AACvC4B,QAAM;AACJ1B,UAAMC;AADF,GADiC;AAIvC0B,kBAAgB;AACd3B,UAAMC;AADQ,GAJuB;AAOvC2B,aAAW;AACT5B,UAAM6B;AADG,GAP4B;AAUvCC,YAAU;AACR9B,UAAMC;AADE,GAV6B;AAavC8B,cAAY;AACV/B,UAAM6B;AADI,GAb2B;AAgBvCG,YAAU;AACRhC,UAAM6B;AADE;AAhB6B,CAApB,CAArB;;AAsBA,IAAMI,cAAc,IAAI,mBAASnC,MAAb,CAAoB;AACtC4B,QAAM;AACJ1B,UAAMC;AADF,GADgC;AAItC0B,kBAAgB;AACd3B,UAAMC;AADQ,GAJsB;AAOtC2B,aAAW;AACT5B,UAAM6B;AADG,GAP2B;AAUtCC,YAAU;AACR9B,UAAMC;AADE,GAV4B;AAatC8B,cAAY;AACV/B,UAAM6B;AADI,GAb0B;AAgBtCG,YAAU;AACRhC,UAAM6B;AADE;AAhB4B,CAApB,CAApB;;AAsBAhC,YAAYqC,MAAZ;AACArC,YAAYqC,MAAZ,CAAmB,gCAAcA,MAAjC,EAAyC,IAAzC;;kBAEerC,W","file":"users.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n\r\nconst usersSchema = new mongoose.Schema({\r\n  first_name: {\r\n    type: String,\r\n  },\r\n  last_name: {\r\n    type: String,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  isActive: {\r\n    type: String,\r\n    default: 'active'\r\n  },\r\n  /*  isOnline: {\r\n     type: String,\r\n     default: 'false'\r\n   }, */\r\n  email: {\r\n    type: String,\r\n    index: true,\r\n    unique: true,\r\n    required: true\r\n  },\r\n  trade_info: {\r\n    type: String,\r\n  },\r\n  basicInfo: {\r\n    timezone: {\r\n      type: String,\r\n    },\r\n    show_real_name: {\r\n      type: String,\r\n    },\r\n    disable_sensetive: {\r\n      type: String,\r\n    },\r\n    enable_web_notification: {\r\n      type: String,\r\n    },\r\n    selling_vacation: {\r\n      type: String,\r\n    },\r\n    buying_vacation: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_trade: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_online: {\r\n      type: String,\r\n    },\r\n    introduction: {\r\n      type: String,\r\n    }\r\n  },\r\n  verification: {\r\n    email_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    mobile_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  }\r\n\r\n});\r\nconst sellerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nconst BuyerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nusersSchema.plugin(uniqueValidator);\r\nusersSchema.plugin(autoIncrement.plugin, 'id');\r\n\r\nexport default usersSchema;"]}
{"version":3,"sources":["../../src/schema/users.js"],"names":["usersSchema","Schema","first_name","type","String","last_name","password","required","isActive","default","imgURL","Object","account_created","Date","phone_no","friends","Array","wallets","trustBy","blockBy","email","index","unique","trade_info","basicInfo","timezone","show_real_name","disable_sensetive","enable_web_notification","selling_vacation","buying_vacation","send_SMS_new_trade","send_SMS_new_online","introduction","verification","email_verified","Boolean","mobile_verified","sellerSchema","user","payment_method","price_btc","Number","currency","limit_from","limit_to","BuyerSchema","plugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACtCC,cAAY;AACVC,UAAMC;AADI,GAD0B;AAItCC,aAAW;AACTF,UAAMC;AADG,GAJ2B;AAOtCE,YAAU;AACRH,UAAMC,MADE;AAERG,cAAU;AAFF,GAP4B;AAWtCC,YAAU;AACRL,UAAMC,MADE;AAERK,aAAS;AAFD,GAX4B;AAetCC,UAAQ;AACNP,UAAMQ;AADA,GAf8B;AAkBtCC,mBAAiB;AACfT,UAAMU,IADS;AAEfJ,aAAS,IAAII,IAAJ;AAFM,GAlBqB;AAsBtCC,YAAU;AACRX,UAAMC;AADE,GAtB4B;AAyBtCW,WAAS;AACPZ,UAAMa;AADC,GAzB6B;AA4BtCC,WAAS;AACPd,UAAMQ;AADC,GA5B6B;AA+BtCO,WAAS;AACPf,UAAMa;AADC,GA/B6B;AAkCtCG,WAAS;AACPhB,UAAMa;AADC,GAlC6B;AAqCtCI,SAAO;AACLjB,UAAMC,MADD;AAELiB,WAAO,IAFF;AAGLC,YAAQ,IAHH;AAILf,cAAU;AAJL,GArC+B;AA2CtCgB,cAAY;AACVpB,UAAMC;AADI,GA3C0B;AA8CtCoB,aAAW;AACTC,cAAU;AACRtB,YAAMC;AADE,KADD;AAITsB,oBAAgB;AACdvB,YAAMC;AADQ,KAJP;AAOTuB,uBAAmB;AACjBxB,YAAMC;AADW,KAPV;AAUTwB,6BAAyB;AACvBzB,YAAMC;AADiB,KAVhB;AAaTyB,sBAAkB;AAChB1B,YAAMC;AADU,KAbT;AAgBT0B,qBAAiB;AACf3B,YAAMC;AADS,KAhBR;AAmBT2B,wBAAoB;AAClB5B,YAAMC;AADY,KAnBX;AAsBT4B,yBAAqB;AACnB7B,YAAMC;AADa,KAtBZ;AAyBT6B,kBAAc;AACZ9B,YAAMC;AADM;AAzBL,GA9C2B;AA2EtC8B,gBAAc;AACZC,oBAAgB;AACdhC,YAAMiC,OADQ;AAEd3B,eAAS;AAFK,KADJ;AAKZ4B,qBAAiB;AACflC,YAAMiC,OADS;AAEf3B,eAAS;AAFM;AALL;;AA3EwB,CAApB,CAApB;AAuFA,IAAM6B,eAAe,IAAI,mBAASrC,MAAb,CAAoB;AACvCsC,QAAM;AACJpC,UAAMC;AADF,GADiC;AAIvCoC,kBAAgB;AACdrC,UAAMC;AADQ,GAJuB;AAOvCqC,aAAW;AACTtC,UAAMuC;AADG,GAP4B;AAUvCC,YAAU;AACRxC,UAAMC;AADE,GAV6B;AAavCwC,cAAY;AACVzC,UAAMuC;AADI,GAb2B;AAgBvCG,YAAU;AACR1C,UAAMuC;AADE;AAhB6B,CAApB,CAArB;;AAsBA,IAAMI,cAAc,IAAI,mBAAS7C,MAAb,CAAoB;AACtCsC,QAAM;AACJpC,UAAMC;AADF,GADgC;AAItCoC,kBAAgB;AACdrC,UAAMC;AADQ,GAJsB;AAOtCqC,aAAW;AACTtC,UAAMuC;AADG,GAP2B;AAUtCC,YAAU;AACRxC,UAAMC;AADE,GAV4B;AAatCwC,cAAY;AACVzC,UAAMuC;AADI,GAb0B;AAgBtCG,YAAU;AACR1C,UAAMuC;AADE;AAhB4B,CAApB,CAApB;;AAsBA1C,YAAY+C,MAAZ;AACA;;kBAEe/C,W","file":"users.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n\r\nconst usersSchema = new mongoose.Schema({\r\n  first_name: {\r\n    type: String,\r\n  },\r\n  last_name: {\r\n    type: String,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  isActive: {\r\n    type: String,\r\n    default: 'active'\r\n  },\r\n  imgURL: {\r\n    type: Object,\r\n  },\r\n  account_created: {\r\n    type: Date,\r\n    default: new Date(),\r\n  },\r\n  phone_no: {\r\n    type: String,\r\n  },\r\n  friends: {\r\n    type: Array,\r\n  },\r\n  wallets: {\r\n    type: Object,\r\n  },\r\n  trustBy: {\r\n    type: Array,\r\n  },\r\n  blockBy: {\r\n    type: Array,\r\n  },\r\n  email: {\r\n    type: String,\r\n    index: true,\r\n    unique: true,\r\n    required: true\r\n  },\r\n  trade_info: {\r\n    type: String,\r\n  },\r\n  basicInfo: {\r\n    timezone: {\r\n      type: String,\r\n    },\r\n    show_real_name: {\r\n      type: String,\r\n    },\r\n    disable_sensetive: {\r\n      type: String,\r\n    },\r\n    enable_web_notification: {\r\n      type: String,\r\n    },\r\n    selling_vacation: {\r\n      type: String,\r\n    },\r\n    buying_vacation: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_trade: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_online: {\r\n      type: String,\r\n    },\r\n    introduction: {\r\n      type: String,\r\n    }\r\n  },\r\n  verification: {\r\n    email_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    mobile_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  }\r\n\r\n});\r\nconst sellerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nconst BuyerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nusersSchema.plugin(uniqueValidator);\r\n// usersSchema.plugin(autoIncrement.plugin, 'id');\r\n\r\nexport default usersSchema;"]}
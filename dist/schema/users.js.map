{"version":3,"sources":["../../src/schema/users.js"],"names":["usersSchema","Schema","first_name","type","String","last_name","password","required","isActive","default","account_created","Date","phone_no","friends","Array","email","index","unique","trade_info","basicInfo","timezone","show_real_name","disable_sensetive","enable_web_notification","selling_vacation","buying_vacation","send_SMS_new_trade","send_SMS_new_online","introduction","verification","email_verified","Boolean","mobile_verified","sellerSchema","user","payment_method","price_btc","Number","currency","limit_from","limit_to","BuyerSchema","plugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACtCC,cAAY;AACVC,UAAMC;AADI,GAD0B;AAItCC,aAAW;AACTF,UAAMC;AADG,GAJ2B;AAOtCE,YAAU;AACRH,UAAMC,MADE;AAERG,cAAU;AAFF,GAP4B;AAWtCC,YAAU;AACRL,UAAMC,MADE;AAERK,aAAS;AAFD,GAX4B;AAetCC,mBAAiB;AACfP,UAAMQ,IADS;AAEfF,aAAS,IAAIE,IAAJ;AAFM,GAfqB;AAmBtCC,YAAU;AACRT,UAAMC;AADE,GAnB4B;AAsBtCS,WAAS;AACPV,UAAMW;;AADC,GAtB6B;AA0BtCC,SAAO;AACLZ,UAAMC,MADD;AAELY,WAAO,IAFF;AAGLC,YAAQ,IAHH;AAILV,cAAU;AAJL,GA1B+B;AAgCtCW,cAAY;AACVf,UAAMC;AADI,GAhC0B;AAmCtCe,aAAW;AACTC,cAAU;AACRjB,YAAMC;AADE,KADD;AAITiB,oBAAgB;AACdlB,YAAMC;AADQ,KAJP;AAOTkB,uBAAmB;AACjBnB,YAAMC;AADW,KAPV;AAUTmB,6BAAyB;AACvBpB,YAAMC;AADiB,KAVhB;AAaToB,sBAAkB;AAChBrB,YAAMC;AADU,KAbT;AAgBTqB,qBAAiB;AACftB,YAAMC;AADS,KAhBR;AAmBTsB,wBAAoB;AAClBvB,YAAMC;AADY,KAnBX;AAsBTuB,yBAAqB;AACnBxB,YAAMC;AADa,KAtBZ;AAyBTwB,kBAAc;AACZzB,YAAMC;AADM;AAzBL,GAnC2B;AAgEtCyB,gBAAc;AACZC,oBAAgB;AACd3B,YAAM4B,OADQ;AAEdtB,eAAS;AAFK,KADJ;AAKZuB,qBAAiB;AACf7B,YAAM4B,OADS;AAEftB,eAAS;AAFM;AALL;;AAhEwB,CAApB,CAApB;AA4EA,IAAMwB,eAAe,IAAI,mBAAShC,MAAb,CAAoB;AACvCiC,QAAM;AACJ/B,UAAMC;AADF,GADiC;AAIvC+B,kBAAgB;AACdhC,UAAMC;AADQ,GAJuB;AAOvCgC,aAAW;AACTjC,UAAMkC;AADG,GAP4B;AAUvCC,YAAU;AACRnC,UAAMC;AADE,GAV6B;AAavCmC,cAAY;AACVpC,UAAMkC;AADI,GAb2B;AAgBvCG,YAAU;AACRrC,UAAMkC;AADE;AAhB6B,CAApB,CAArB;;AAsBA,IAAMI,cAAc,IAAI,mBAASxC,MAAb,CAAoB;AACtCiC,QAAM;AACJ/B,UAAMC;AADF,GADgC;AAItC+B,kBAAgB;AACdhC,UAAMC;AADQ,GAJsB;AAOtCgC,aAAW;AACTjC,UAAMkC;AADG,GAP2B;AAUtCC,YAAU;AACRnC,UAAMC;AADE,GAV4B;AAatCmC,cAAY;AACVpC,UAAMkC;AADI,GAb0B;AAgBtCG,YAAU;AACRrC,UAAMkC;AADE;AAhB4B,CAApB,CAApB;;AAsBArC,YAAY0C,MAAZ;AACA1C,YAAY0C,MAAZ,CAAmB,gCAAcA,MAAjC,EAAyC,IAAzC;;kBAEe1C,W","file":"users.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n\r\nconst usersSchema = new mongoose.Schema({\r\n  first_name: {\r\n    type: String,\r\n  },\r\n  last_name: {\r\n    type: String,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  isActive: {\r\n    type: String,\r\n    default: 'active'\r\n  },\r\n  account_created: {\r\n    type: Date,\r\n    default: new Date(),\r\n  },\r\n  phone_no: {\r\n    type: String,\r\n  },\r\n  friends: {\r\n    type: Array,\r\n\r\n  },\r\n  email: {\r\n    type: String,\r\n    index: true,\r\n    unique: true,\r\n    required: true\r\n  },\r\n  trade_info: {\r\n    type: String,\r\n  },\r\n  basicInfo: {\r\n    timezone: {\r\n      type: String,\r\n    },\r\n    show_real_name: {\r\n      type: String,\r\n    },\r\n    disable_sensetive: {\r\n      type: String,\r\n    },\r\n    enable_web_notification: {\r\n      type: String,\r\n    },\r\n    selling_vacation: {\r\n      type: String,\r\n    },\r\n    buying_vacation: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_trade: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_online: {\r\n      type: String,\r\n    },\r\n    introduction: {\r\n      type: String,\r\n    }\r\n  },\r\n  verification: {\r\n    email_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    mobile_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  }\r\n\r\n});\r\nconst sellerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nconst BuyerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nusersSchema.plugin(uniqueValidator);\r\nusersSchema.plugin(autoIncrement.plugin, 'id');\r\n\r\nexport default usersSchema;"]}
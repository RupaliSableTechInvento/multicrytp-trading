{"version":3,"sources":["../../src/schema/users.js"],"names":["usersSchema","Schema","first_name","type","String","last_name","password","required","isActive","default","email","index","unique","trade_info","basicInfo","timezone","show_real_name","disable_sensetive","enable_web_notification","selling_vacation","buying_vacation","send_SMS_new_trade","send_SMS_new_online","introduction","varification","email_varified","mobile_varified","sellerSchema","user","payment_method","price_btc","Number","currency","limit_from","limit_to","plugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACtCC,cAAY;AACVC,UAAMC;AADI,GAD0B;AAItCC,aAAW;AACTF,UAAMC;AADG,GAJ2B;AAOtCE,YAAU;AACRH,UAAMC,MADE;AAERG,cAAU;AAFF,GAP4B;AAWtCC,YAAU;AACRL,UAAMC,MADE;AAERK,aAAQ;AAFA,GAX4B;AAetCC,SAAO;AACLP,UAAMC,MADD;AAELO,WAAO,IAFF;AAGLC,YAAQ,IAHH;AAILL,cAAU;AAJL,GAf+B;AAqBtCM,cAAY;AACVV,UAAMC;AADI,GArB0B;AAwBtCU,aAAW;AACTC,cAAU;AACRZ,YAAMC;AADE,KADD;AAITY,oBAAgB;AACdb,YAAMC;AADQ,KAJP;AAOTa,uBAAmB;AACjBd,YAAMC;AADW,KAPV;AAUTc,6BAAyB;AACvBf,YAAMC;AADiB,KAVhB;AAaTe,sBAAkB;AAChBhB,YAAMC;AADU,KAbT;AAgBTgB,qBAAiB;AACfjB,YAAMC;AADS,KAhBR;AAmBTiB,wBAAoB;AAClBlB,YAAMC;AADY,KAnBX;AAsBTkB,yBAAqB;AACnBnB,YAAMC;AADa,KAtBZ;AAyBTmB,kBAAc;AACZpB,YAAMC;AADM;AAzBL,GAxB2B;AAqDtCoB,gBAAa;AACXC,oBAAe;AACbtB,YAAKC,MADQ;AAEbK,eAAQ;AAFK,KADJ;AAKXiB,qBAAgB;AACdvB,YAAKC,MADS;AAEdK,eAAQ;AAFM;AALL;;AArDyB,CAApB,CAApB;AAiEA,IAAMkB,eAAe,IAAI,mBAAS1B,MAAb,CAAoB;AACvC2B,QAAM;AACJzB,UAAMC;AADF,GADiC;AAIvCyB,kBAAgB;AACd1B,UAAMC;AADQ,GAJuB;AAOvC0B,aAAW;AACT3B,UAAM4B;AADG,GAP4B;AAUvCC,YAAU;AACR7B,UAAMC;AADE,GAV6B;AAavC6B,cAAY;AACV9B,UAAM4B;AADI,GAb2B;AAgBvCG,YAAU;AACR/B,UAAM4B;AADE;AAhB6B,CAApB,CAArB;;AAsBA/B,YAAYmC,MAAZ;AACAnC,YAAYmC,MAAZ,CAAmB,gCAAcA,MAAjC,EAAyC,IAAzC;;kBAEenC,W","file":"users.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n\r\nconst usersSchema = new mongoose.Schema({\r\n  first_name: {\r\n    type: String,\r\n  },\r\n  last_name: {\r\n    type: String,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  isActive: {\r\n    type: String,\r\n    default:'active'\r\n  },\r\n  email: {\r\n    type: String,\r\n    index: true,\r\n    unique: true,\r\n    required: true\r\n  },\r\n  trade_info: {\r\n    type: String,\r\n  },\r\n  basicInfo: {\r\n    timezone: {\r\n      type: String,\r\n    },\r\n    show_real_name: {\r\n      type: String,\r\n    },\r\n    disable_sensetive: {\r\n      type: String,\r\n    },\r\n    enable_web_notification: {\r\n      type: String,\r\n    },\r\n    selling_vacation: {\r\n      type: String,\r\n    },\r\n    buying_vacation: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_trade: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_online: {\r\n      type: String,\r\n    },\r\n    introduction: {\r\n      type: String,\r\n    }\r\n  },\r\n  varification:{\r\n    email_varified:{\r\n      type:String,\r\n      default:false,\r\n    },\r\n    mobile_varified:{\r\n      type:String,\r\n      default:false,\r\n    },\r\n  }\r\n\r\n});\r\nconst sellerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nusersSchema.plugin(uniqueValidator);\r\nusersSchema.plugin(autoIncrement.plugin, 'id');\r\n\r\nexport default usersSchema;\r\n"]}
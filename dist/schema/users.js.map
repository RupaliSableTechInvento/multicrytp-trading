{"version":3,"sources":["../../src/schema/users.js"],"names":["usersSchema","Schema","first_name","type","String","last_name","password","required","isActive","default","phone_no","email","index","unique","trade_info","basicInfo","timezone","show_real_name","disable_sensetive","enable_web_notification","selling_vacation","buying_vacation","send_SMS_new_trade","send_SMS_new_online","introduction","verification","email_verified","Boolean","mobile_verified","sellerSchema","user","payment_method","price_btc","Number","currency","limit_from","limit_to","BuyerSchema","plugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACtCC,cAAY;AACVC,UAAMC;AADI,GAD0B;AAItCC,aAAW;AACTF,UAAMC;AADG,GAJ2B;AAOtCE,YAAU;AACRH,UAAMC,MADE;AAERG,cAAU;AAFF,GAP4B;AAWtCC,YAAU;AACRL,UAAMC,MADE;AAERK,aAAS;AAFD,GAX4B;AAetCC,YAAU;AACRP,UAAMC;AADE,GAf4B;AAkBtC;;;;AAIAO,SAAO;AACLR,UAAMC,MADD;AAELQ,WAAO,IAFF;AAGLC,YAAQ,IAHH;AAILN,cAAU;AAJL,GAtB+B;AA4BtCO,cAAY;AACVX,UAAMC;AADI,GA5B0B;AA+BtCW,aAAW;AACTC,cAAU;AACRb,YAAMC;AADE,KADD;AAITa,oBAAgB;AACdd,YAAMC;AADQ,KAJP;AAOTc,uBAAmB;AACjBf,YAAMC;AADW,KAPV;AAUTe,6BAAyB;AACvBhB,YAAMC;AADiB,KAVhB;AAaTgB,sBAAkB;AAChBjB,YAAMC;AADU,KAbT;AAgBTiB,qBAAiB;AACflB,YAAMC;AADS,KAhBR;AAmBTkB,wBAAoB;AAClBnB,YAAMC;AADY,KAnBX;AAsBTmB,yBAAqB;AACnBpB,YAAMC;AADa,KAtBZ;AAyBToB,kBAAc;AACZrB,YAAMC;AADM;AAzBL,GA/B2B;AA4DtCqB,gBAAc;AACZC,oBAAgB;AACdvB,YAAMwB,OADQ;AAEdlB,eAAS;AAFK,KADJ;AAKZmB,qBAAiB;AACfzB,YAAMwB,OADS;AAEflB,eAAS;AAFM;AALL;;AA5DwB,CAApB,CAApB;AAwEA,IAAMoB,eAAe,IAAI,mBAAS5B,MAAb,CAAoB;AACvC6B,QAAM;AACJ3B,UAAMC;AADF,GADiC;AAIvC2B,kBAAgB;AACd5B,UAAMC;AADQ,GAJuB;AAOvC4B,aAAW;AACT7B,UAAM8B;AADG,GAP4B;AAUvCC,YAAU;AACR/B,UAAMC;AADE,GAV6B;AAavC+B,cAAY;AACVhC,UAAM8B;AADI,GAb2B;AAgBvCG,YAAU;AACRjC,UAAM8B;AADE;AAhB6B,CAApB,CAArB;;AAsBA,IAAMI,cAAc,IAAI,mBAASpC,MAAb,CAAoB;AACtC6B,QAAM;AACJ3B,UAAMC;AADF,GADgC;AAItC2B,kBAAgB;AACd5B,UAAMC;AADQ,GAJsB;AAOtC4B,aAAW;AACT7B,UAAM8B;AADG,GAP2B;AAUtCC,YAAU;AACR/B,UAAMC;AADE,GAV4B;AAatC+B,cAAY;AACVhC,UAAM8B;AADI,GAb0B;AAgBtCG,YAAU;AACRjC,UAAM8B;AADE;AAhB4B,CAApB,CAApB;;AAsBAjC,YAAYsC,MAAZ;AACAtC,YAAYsC,MAAZ,CAAmB,gCAAcA,MAAjC,EAAyC,IAAzC;;kBAEetC,W","file":"users.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n\r\nconst usersSchema = new mongoose.Schema({\r\n  first_name: {\r\n    type: String,\r\n  },\r\n  last_name: {\r\n    type: String,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  isActive: {\r\n    type: String,\r\n    default: 'active'\r\n  },\r\n  phone_no: {\r\n    type: String,\r\n  },\r\n  /*  isOnline: {\r\n     type: String,\r\n     default: 'false'\r\n   }, */\r\n  email: {\r\n    type: String,\r\n    index: true,\r\n    unique: true,\r\n    required: true\r\n  },\r\n  trade_info: {\r\n    type: String,\r\n  },\r\n  basicInfo: {\r\n    timezone: {\r\n      type: String,\r\n    },\r\n    show_real_name: {\r\n      type: String,\r\n    },\r\n    disable_sensetive: {\r\n      type: String,\r\n    },\r\n    enable_web_notification: {\r\n      type: String,\r\n    },\r\n    selling_vacation: {\r\n      type: String,\r\n    },\r\n    buying_vacation: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_trade: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_online: {\r\n      type: String,\r\n    },\r\n    introduction: {\r\n      type: String,\r\n    }\r\n  },\r\n  verification: {\r\n    email_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    mobile_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  }\r\n\r\n});\r\nconst sellerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nconst BuyerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nusersSchema.plugin(uniqueValidator);\r\nusersSchema.plugin(autoIncrement.plugin, 'id');\r\n\r\nexport default usersSchema;"]}
{"version":3,"sources":["../../src/schema/users.js"],"names":["usersSchema","Schema","first_name","type","String","last_name","password","required","isActive","default","imgURL","Object","account_created","Date","phone_no","friends","Array","trustBy","blockBy","email","index","unique","trade_info","basicInfo","timezone","show_real_name","disable_sensetive","enable_web_notification","selling_vacation","buying_vacation","send_SMS_new_trade","send_SMS_new_online","introduction","verification","email_verified","Boolean","mobile_verified","sellerSchema","user","payment_method","price_btc","Number","currency","limit_from","limit_to","BuyerSchema","plugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACtCC,cAAY;AACVC,UAAMC;AADI,GAD0B;AAItCC,aAAW;AACTF,UAAMC;AADG,GAJ2B;AAOtCE,YAAU;AACRH,UAAMC,MADE;AAERG,cAAU;AAFF,GAP4B;AAWtCC,YAAU;AACRL,UAAMC,MADE;AAERK,aAAS;AAFD,GAX4B;AAetCC,UAAQ;AACNP,UAAMQ;AACN;AAFM,GAf8B;AAmBtCC,mBAAiB;AACfT,UAAMU,IADS;AAEfJ,aAAS,IAAII,IAAJ;AAFM,GAnBqB;AAuBtCC,YAAU;AACRX,UAAMC;AADE,GAvB4B;AA0BtCW,WAAS;AACPZ,UAAMa;AADC,GA1B6B;AA6BtCC,WAAS;AACPd,UAAMa;AADC,GA7B6B;AAgCtCE,WAAS;AACPf,UAAMa;AADC,GAhC6B;AAmCtCG,SAAO;AACLhB,UAAMC,MADD;AAELgB,WAAO,IAFF;AAGLC,YAAQ,IAHH;AAILd,cAAU;AAJL,GAnC+B;AAyCtCe,cAAY;AACVnB,UAAMC;AADI,GAzC0B;AA4CtCmB,aAAW;AACTC,cAAU;AACRrB,YAAMC;AADE,KADD;AAITqB,oBAAgB;AACdtB,YAAMC;AADQ,KAJP;AAOTsB,uBAAmB;AACjBvB,YAAMC;AADW,KAPV;AAUTuB,6BAAyB;AACvBxB,YAAMC;AADiB,KAVhB;AAaTwB,sBAAkB;AAChBzB,YAAMC;AADU,KAbT;AAgBTyB,qBAAiB;AACf1B,YAAMC;AADS,KAhBR;AAmBT0B,wBAAoB;AAClB3B,YAAMC;AADY,KAnBX;AAsBT2B,yBAAqB;AACnB5B,YAAMC;AADa,KAtBZ;AAyBT4B,kBAAc;AACZ7B,YAAMC;AADM;AAzBL,GA5C2B;AAyEtC6B,gBAAc;AACZC,oBAAgB;AACd/B,YAAMgC,OADQ;AAEd1B,eAAS;AAFK,KADJ;AAKZ2B,qBAAiB;AACfjC,YAAMgC,OADS;AAEf1B,eAAS;AAFM;AALL;;AAzEwB,CAApB,CAApB;AAqFA,IAAM4B,eAAe,IAAI,mBAASpC,MAAb,CAAoB;AACvCqC,QAAM;AACJnC,UAAMC;AADF,GADiC;AAIvCmC,kBAAgB;AACdpC,UAAMC;AADQ,GAJuB;AAOvCoC,aAAW;AACTrC,UAAMsC;AADG,GAP4B;AAUvCC,YAAU;AACRvC,UAAMC;AADE,GAV6B;AAavCuC,cAAY;AACVxC,UAAMsC;AADI,GAb2B;AAgBvCG,YAAU;AACRzC,UAAMsC;AADE;AAhB6B,CAApB,CAArB;;AAsBA,IAAMI,cAAc,IAAI,mBAAS5C,MAAb,CAAoB;AACtCqC,QAAM;AACJnC,UAAMC;AADF,GADgC;AAItCmC,kBAAgB;AACdpC,UAAMC;AADQ,GAJsB;AAOtCoC,aAAW;AACTrC,UAAMsC;AADG,GAP2B;AAUtCC,YAAU;AACRvC,UAAMC;AADE,GAV4B;AAatCuC,cAAY;AACVxC,UAAMsC;AADI,GAb0B;AAgBtCG,YAAU;AACRzC,UAAMsC;AADE;AAhB4B,CAApB,CAApB;;AAsBAzC,YAAY8C,MAAZ;AACA;;kBAEe9C,W","file":"users.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n\r\nconst usersSchema = new mongoose.Schema({\r\n  first_name: {\r\n    type: String,\r\n  },\r\n  last_name: {\r\n    type: String,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  isActive: {\r\n    type: String,\r\n    default: 'active'\r\n  },\r\n  imgURL: {\r\n    type: Object,\r\n    // default: \"../../assets/app/media/img/users/userProfileNew.png\"\r\n  },\r\n  account_created: {\r\n    type: Date,\r\n    default: new Date(),\r\n  },\r\n  phone_no: {\r\n    type: String,\r\n  },\r\n  friends: {\r\n    type: Array,\r\n  },\r\n  trustBy: {\r\n    type: Array,\r\n  },\r\n  blockBy: {\r\n    type: Array,\r\n  },\r\n  email: {\r\n    type: String,\r\n    index: true,\r\n    unique: true,\r\n    required: true\r\n  },\r\n  trade_info: {\r\n    type: String,\r\n  },\r\n  basicInfo: {\r\n    timezone: {\r\n      type: String,\r\n    },\r\n    show_real_name: {\r\n      type: String,\r\n    },\r\n    disable_sensetive: {\r\n      type: String,\r\n    },\r\n    enable_web_notification: {\r\n      type: String,\r\n    },\r\n    selling_vacation: {\r\n      type: String,\r\n    },\r\n    buying_vacation: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_trade: {\r\n      type: String,\r\n    },\r\n    send_SMS_new_online: {\r\n      type: String,\r\n    },\r\n    introduction: {\r\n      type: String,\r\n    }\r\n  },\r\n  verification: {\r\n    email_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    mobile_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  }\r\n\r\n});\r\nconst sellerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nconst BuyerSchema = new mongoose.Schema({\r\n  user: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n  price_btc: {\r\n    type: Number,\r\n  },\r\n  currency: {\r\n    type: String,\r\n  },\r\n  limit_from: {\r\n    type: Number,\r\n  },\r\n  limit_to: {\r\n    type: Number,\r\n  },\r\n});\r\n\r\n\r\nusersSchema.plugin(uniqueValidator);\r\n// usersSchema.plugin(autoIncrement.plugin, 'id');\r\n\r\nexport default usersSchema;"]}
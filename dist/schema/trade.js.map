{"version":3,"sources":["../../src/schema/trade.js"],"names":["postTradeSchema","Schema","tradeMethod","type","String","uppercase","traderType","cryptoCurrency","location","payment_method","more_information","currency","margin","Number","price_equation","min_trans_limit","max_trans_limit","opening_hours","sunday","start","end","monday","tuesday","wednesday","thursday","friday","saturday","terms_of_trade","online_selling","payment_details","minimum_volume","minimum_feedback","new_buyer_limit","transaction_volume_coefficient","display_reference","reference_type","payment_window","liquidity_options","track_liquidity","security_options","identified_people_only","identify_user_before","real_name_required","sms_verification_required","trusted_people_only","user","firstName","plugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,kBAAkB,IAAI,mBAASC,MAAb,CAAoB;;AAE1CC,eAAa,EAAE;AACbC,UAAMC,MADK,EACG;AACdC,eAAW;AAFA,GAF6B;AAM1CC,cAAY,EAAE;AACZH,UAAMC,MADI;AAEVC,eAAW;AAFD,GAN8B;AAU1CE,kBAAgB;AACdJ,UAAMC,MADQ;AAEdC,eAAW;AAFG,GAV0B;AAc1CG,YAAU;AACRL,UAAMC;AADE,GAdgC;AAiB1CK,kBAAgB;AACdN,UAAMC;AADQ,GAjB0B;;AAqB1CM,oBAAkB;AAChBC,cAAU;AACRR,YAAMC;AADE,KADM;AAIhBQ,YAAQ;AACNT,YAAMU;AADA,KAJQ;AAOhBC,oBAAgB;AACdX,YAAMC;AADQ,KAPA;AAUhBW,qBAAiB;AACfZ,YAAMU;AADS,KAVD;AAahBG,qBAAiB;AACfb,YAAMU;AADS,KAbD;AAgBhBI,mBAAe;AACbC,cAAQ;AACNC,eAAO;AACLhB,gBAAMC;AADD,SADD;AAINgB,aAAK;AACHjB,gBAAMC;AADH;AAJC,OADK;AASbiB,cAAQ;AACNF,eAAO;AACLhB,gBAAMC;AADD,SADD;AAINgB,aAAK;AACHjB,gBAAMC;AADH;AAJC,OATK;AAiBbkB,eAAS;AACPH,eAAO;AACLhB,gBAAMC;AADD,SADA;AAIPgB,aAAK;AACHjB,gBAAMC;AADH;AAJE,OAjBI;AAyBbmB,iBAAW;AACTJ,eAAO;AACLhB,gBAAMC;AADD,SADE;AAITgB,aAAK;AACHjB,gBAAMC;AADH;AAJI,OAzBE;AAiCboB,gBAAU;AACRL,eAAO;AACLhB,gBAAMC;AADD,SADC;AAIRgB,aAAK;AACHjB,gBAAMC;AADH;AAJG,OAjCG;AAyCbqB,cAAQ;AACNN,eAAO;AACLhB,gBAAMC;AADD,SADD;AAINgB,aAAK;AACHjB,gBAAMC;AADH;AAJC,OAzCK;AAiDbsB,gBAAU;AACRP,eAAO;AACLhB,gBAAMC;AADD,SADC;AAIRgB,aAAK;AACHjB,gBAAMC;AADH;AAJG;AAjDG,KAhBC;AA0EhBuB,oBAAgB;AACdxB,YAAMC;AADQ;AA1EA,GArBwB;AAmG1CwB,kBAAgB;AACdC,qBAAiB;AACf1B,YAAMC;AADS,KADH;AAId0B,oBAAgB;AACd3B,YAAMU;AADQ,KAJF;AAOdkB,sBAAkB;AAChB5B,YAAMU;AADU,KAPJ;AAUdmB,qBAAiB;AACf7B,YAAMU;AADS,KAVH;AAadoB,oCAAgC;AAC9B9B,YAAMU;AADwB,KAblB;AAgBdqB,uBAAmB;AACjB/B,YAAMC;AADW,KAhBL;AAmBd+B,oBAAgB;AACdhC,YAAMC;AADQ;AAnBF,GAnG0B;AA0H1CgC,kBAAgB;AACdjC,UAAMC;AADQ,GA1H0B;AA6H1CiC,qBAAmB;AACjBC,qBAAiB;AACfnC,YAAMC;AADS;AADA,GA7HuB;AAkI1CmC,oBAAkB;AAChBC,4BAAwB;AACtBrC,YAAMC;AADgB,KADR;AAIhBqC,0BAAsB;AACpBtC,YAAMC;AADc,KAJN;AAOhBsC,wBAAoB;AAClBvC,YAAMC;AADY,KAPJ;AAUhBuC,+BAA2B;AACzBxC,YAAMC;AADmB,KAVX;AAahBwC,yBAAqB;AACnBzC,YAAMC;AADa;AAbL,GAlIwB;AAmJ1CyC,QAAM;AACJ1C,UAAMC;AADF,GAnJoC;AAsJ1C0C,aAAW;AACT3C,UAAMC;AADG;AAtJ+B,CAApB,CAAxB;;AA2JAJ,gBAAgB+C,MAAhB;;AAEA;;;;;kBAKe/C,e","file":"trade.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n\r\nconst postTradeSchema = new mongoose.Schema({\r\n\r\n  tradeMethod: { // local or online\r\n    type: String, //LOCAL_SELL\r\n    uppercase: true\r\n  },\r\n  traderType: { // sell or buy\r\n    type: String,\r\n    uppercase: true\r\n  },\r\n  cryptoCurrency: {\r\n    type: String,\r\n    uppercase: true\r\n  },\r\n  location: {\r\n    type: String,\r\n  },\r\n  payment_method: {\r\n    type: String,\r\n  },\r\n\r\n  more_information: {\r\n    currency: {\r\n      type: String,\r\n    },\r\n    margin: {\r\n      type: Number,\r\n    },\r\n    price_equation: {\r\n      type: String,\r\n    },\r\n    min_trans_limit: {\r\n      type: Number,\r\n    },\r\n    max_trans_limit: {\r\n      type: Number,\r\n    },\r\n    opening_hours: {\r\n      sunday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      monday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      tuesday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      wednesday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      thursday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      friday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      saturday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n    },\r\n    terms_of_trade: {\r\n      type: String,\r\n    },\r\n  },\r\n  online_selling: {\r\n    payment_details: {\r\n      type: String,\r\n    },\r\n    minimum_volume: {\r\n      type: Number,\r\n    },\r\n    minimum_feedback: {\r\n      type: Number,\r\n    },\r\n    new_buyer_limit: {\r\n      type: Number,\r\n    },\r\n    transaction_volume_coefficient: {\r\n      type: Number,\r\n    },\r\n    display_reference: {\r\n      type: String,\r\n    },\r\n    reference_type: {\r\n      type: String,\r\n    },\r\n  },\r\n  payment_window: {\r\n    type: String,\r\n  },\r\n  liquidity_options: {\r\n    track_liquidity: {\r\n      type: String,\r\n    },\r\n  },\r\n  security_options: {\r\n    identified_people_only: {\r\n      type: String,\r\n    },\r\n    identify_user_before: {\r\n      type: String,\r\n    },\r\n    real_name_required: {\r\n      type: String,\r\n    },\r\n    sms_verification_required: {\r\n      type: String,\r\n    },\r\n    trusted_people_only: {\r\n      type: String,\r\n    },\r\n  },\r\n  user: {\r\n    type: String,\r\n  },\r\n  firstName: {\r\n    type: String,\r\n  }\r\n});\r\n\r\npostTradeSchema.plugin(uniqueValidator);\r\n\r\n/* const buySell = new mongoose.Schema({\r\n  _id: Schema.ObjectId,\r\n  id: String,\r\n  value: string,\r\n}) */\r\nexport default postTradeSchema;"]}
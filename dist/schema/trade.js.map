{"version":3,"sources":["../../src/schema/trade.js"],"names":["postTradeSchema","Schema","trade_type","iwant","type","String","location","payment_method","more_information","currency","margin","Number","price_equation","min_trans_limit","max_trans_limit","opening_hours","sunday","start","end","monday","tuesday","wednesday","thursday","friday","saturday","terms_of_trade","online_selling","payment_details","minimum_volume","minimum_feedback","new_buyer_limit","transaction_volume_coefficient","display_reference","reference_type","payment_window","liquidity_options","track_liquidity","security_options","identified_people_only","identify_user_before","real_name_required","sms_verification_required","trusted_people_only","user","plugin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,kBAAkB,IAAI,mBAASC,MAAb,CAAoB;AAC1CC,cAAY;AACVC,WAAO;AACLC,YAAMC;AADD,KADG;AAIVC,cAAU;AACRF,YAAMC;AADE,KAJA;AAOVE,oBAAgB;AACdH,YAAMC;AADQ;AAPN,GAD8B;AAY1CG,oBAAkB;AAChBC,cAAU;AACRL,YAAMC;AADE,KADM;AAIhBK,YAAQ;AACNN,YAAMO;AADA,KAJQ;AAOhBC,oBAAgB;AACdR,YAAMC;AADQ,KAPA;AAUhBQ,qBAAiB;AACfT,YAAMO;AADS,KAVD;AAahBG,qBAAiB;AACfV,YAAMO;AADS,KAbD;AAgBhBI,mBAAe;AACbC,cAAQ;AACNC,eAAO;AACLb,gBAAMC;AADD,SADD;AAINa,aAAK;AACHd,gBAAMC;AADH;AAJC,OADK;AASbc,cAAQ;AACNF,eAAO;AACLb,gBAAMC;AADD,SADD;AAINa,aAAK;AACHd,gBAAMC;AADH;AAJC,OATK;AAiBbe,eAAS;AACPH,eAAO;AACLb,gBAAMC;AADD,SADA;AAIPa,aAAK;AACHd,gBAAMC;AADH;AAJE,OAjBI;AAyBbgB,iBAAW;AACTJ,eAAO;AACLb,gBAAMC;AADD,SADE;AAITa,aAAK;AACHd,gBAAMC;AADH;AAJI,OAzBE;AAiCbiB,gBAAU;AACRL,eAAO;AACLb,gBAAMC;AADD,SADC;AAIRa,aAAK;AACHd,gBAAMC;AADH;AAJG,OAjCG;AAyCbkB,cAAQ;AACNN,eAAO;AACLb,gBAAMC;AADD,SADD;AAINa,aAAK;AACHd,gBAAMC;AADH;AAJC,OAzCK;AAiDbmB,gBAAU;AACRP,eAAO;AACLb,gBAAMC;AADD,SADC;AAIRa,aAAK;AACHd,gBAAMC;AADH;AAJG;AAjDG,KAhBC;AA0EhBoB,oBAAgB;AACdrB,YAAMC;AADQ;AA1EA,GAZwB;AA0F1CqB,kBAAgB;AACdC,qBAAiB;AACfvB,YAAMC;AADS,KADH;AAIduB,oBAAgB;AACdxB,YAAMO;AADQ,KAJF;AAOdkB,sBAAkB;AAChBzB,YAAMO;AADU,KAPJ;AAUdmB,qBAAiB;AACf1B,YAAMO;AADS,KAVH;AAadoB,oCAAgC;AAC9B3B,YAAMO;AADwB,KAblB;AAgBdqB,uBAAmB;AACjB5B,YAAMC;AADW,KAhBL;AAmBd4B,oBAAgB;AACd7B,YAAMC;AADQ;AAnBF,GA1F0B;AAiH1C6B,kBAAgB;AACd9B,UAAMC;AADQ,GAjH0B;AAoH1C8B,qBAAmB;AACjBC,qBAAiB;AACfhC,YAAMC;AADS;AADA,GApHuB;AAyH1CgC,oBAAkB;AAChBC,4BAAwB;AACtBlC,YAAMC;AADgB,KADR;AAIhBkC,0BAAsB;AACpBnC,YAAMC;AADc,KAJN;AAOhBmC,wBAAoB;AAClBpC,YAAMC;AADY,KAPJ;AAUhBoC,+BAA2B;AACzBrC,YAAMC;AADmB,KAVX;AAahBqC,yBAAqB;AACnBtC,YAAMC;AADa;AAbL,GAzHwB;AA0I1CsC,QAAM;AACJvC,UAAMC;AADF;AA1IoC,CAApB,CAAxB;;AA+IAL,gBAAgB4C,MAAhB;;AAEA;;;;;kBAKe5C,e","file":"trade.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n\r\nconst postTradeSchema = new mongoose.Schema({\r\n  trade_type: {\r\n    iwant: {\r\n      type: String,\r\n    },\r\n    location: {\r\n      type: String,\r\n    },\r\n    payment_method: {\r\n      type: String,\r\n    },\r\n  },\r\n  more_information: {\r\n    currency: {\r\n      type: String,\r\n    },\r\n    margin: {\r\n      type: Number,\r\n    },\r\n    price_equation: {\r\n      type: String,\r\n    },\r\n    min_trans_limit: {\r\n      type: Number,\r\n    },\r\n    max_trans_limit: {\r\n      type: Number,\r\n    },\r\n    opening_hours: {\r\n      sunday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      monday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      tuesday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      wednesday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      thursday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      friday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n      saturday: {\r\n        start: {\r\n          type: String,\r\n        },\r\n        end: {\r\n          type: String,\r\n        },\r\n      },\r\n    },\r\n    terms_of_trade: {\r\n      type: String,\r\n    },\r\n  },\r\n  online_selling: {\r\n    payment_details: {\r\n      type: String,\r\n    },\r\n    minimum_volume: {\r\n      type: Number,\r\n    },\r\n    minimum_feedback: {\r\n      type: Number,\r\n    },\r\n    new_buyer_limit: {\r\n      type: Number,\r\n    },\r\n    transaction_volume_coefficient: {\r\n      type: Number,\r\n    },\r\n    display_reference: {\r\n      type: String,\r\n    },\r\n    reference_type: {\r\n      type: String,\r\n    },\r\n  },\r\n  payment_window: {\r\n    type: String,\r\n  },\r\n  liquidity_options: {\r\n    track_liquidity: {\r\n      type: String,\r\n    },\r\n  },\r\n  security_options: {\r\n    identified_people_only: {\r\n      type: String,\r\n    },\r\n    identify_user_before: {\r\n      type: String,\r\n    },\r\n    real_name_required: {\r\n      type: String,\r\n    },\r\n    sms_verification_required: {\r\n      type: String,\r\n    },\r\n    trusted_people_only: {\r\n      type: String,\r\n    },\r\n  },\r\n  user: {\r\n    type: String,\r\n  },\r\n});\r\n\r\npostTradeSchema.plugin(uniqueValidator);\r\n\r\n/* const buySell = new mongoose.Schema({\r\n  _id: Schema.ObjectId,\r\n  id: String,\r\n  value: string,\r\n}) */\r\nexport default postTradeSchema;"]}
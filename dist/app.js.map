{"version":3,"sources":["../src/app.js"],"names":["BlockIo","require","version","block_io","get_my_archived_addresses","err","data","app","use","urlencoded","extended","json","static","listen","Api_port","console","log","mosca","mqtt","http","httpServ","createServer","ascoltatore","type","url","pubsubCollection","mongo","server","Server","port","bundle","backend","attachHttpServer","client","connect","on","setup","published","packet","cb","topic","indexOf","newPacket","payload","retain","qos","id"],"mappings":"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","file":"app.js","sourcesContent":["import express from 'express';\nimport 'babel-polyfill';\nimport './database/db';\nimport env from './env';\nimport routes from './routes';\nimport bodyParser from 'body-parser';\nimport authenticated from './middlewares/authenticated';\nimport async from 'async';\nvar BlockIo = require('block_io');\nvar version = 2; // API version\nvar block_io = new BlockIo('e1e0-ea6a-d686-dd2e', 'Abhi1Abhi1Abhi1', version);\n// block_io.get_new_address({'label1': 'shibe1'}, console.log);\n// let param1=null,param2=null;\n// block_io.get_my_addresses({},function (data,a) {\n// var addr = a;\n// console.log(addr);\n// for (var i = 0; i < addr.data.addresses.length; i++) {\n//    console.log(addr.data.addresses[i]);\n// }\n// });\n// block_io.get_current_price({}, console.log);\n// block_io.get_my_archived_addresses({}, console.log);\n// block_io.archive_address({'addresses': '2NFqxPiKTA13iZpyt3jt5ftPz5VbFuVu5eU'},console.log);\nblock_io.get_my_archived_addresses({}, function(err, data) {\n\n});\n// block_io.get_network_fee_estimate({'amounts': '0', 'to_addresses': '2NFqxPiKTA13iZpyt3jt5ftPz5VbFuVu5eU'},console.log);\n// block_io.get_my_addresses({}, console.log);\n// block_io.create_forwarding_address({'to_address': '39mQmjBtG9yPbQfDqF1hjr15bjYjANAZCT'},console.log);\n// console.log(\"addr\",addr);\n// setTimeout(function () {\n//   console.log(\"addr\",param1,param2);\n// }, 5000);\n\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.static('client'))\n\napp.use('/users', authenticated);\napp.use('/users/*', authenticated);\nroutes(app);\n\napp.listen(env.Api_port, () => {\n  console.log(`Api listening on port ${env.Api_port}!`);\n});\n\n\nvar mosca = require('mosca');\nvar mqtt = require('mqtt');\n\nvar http = require('http')\nvar httpServ = http.createServer()\nvar ascoltatore = {\n  //using ascoltatore\n  type: 'mongo',\n  url: 'mongodb://admin:admin@ds111529.mlab.com:11529/heroku_1qmzqz96',\n  pubsubCollection: 'ascoltatore',\n  mongo: {}\n};\n\nvar server = new mosca.Server({\n  http: {\n    port: 1884,\n    bundle: true,\n    static: './',\n    backend: ascoltatore\n\n  }\n});\nserver.attachHttpServer(httpServ);\n\n/* \nvar message = {\n  topic: 'hiii',\n  payload: 'abcde', // or a Buffer\n  qos: 0, // 0, 1, or 2\n  retain: false // or true\n};\n */\n\n\n\nvar client = mqtt.connect('mqtt://test.mosquitto.org')\n  // client = mqtt.createClient(1884, 'localhost');\nclient = mqtt.connect('mqtt://user:pass@localhost?clientId=123abc');\n\nserver.on('ready', setup);\n\nfunction setup() {\n\n  console.log('Mosca server is up and running 1')\n}\n\n// client.subscribe('presence');\n/* \nconsole.log('Client publishing.. ');\nclient.publish('presence', 'Client 1 is alive.. Test Ping! ' + Date());\n\nclient.end(); */\n\nserver.published = function(packet, client, cb) {\n  if (packet.topic.indexOf('echo') === 0) {\n    return cb();\n  }\n\n  var newPacket = {\n    topic: 'echo/' + packet.topic,\n    payload: packet.payload,\n    retain: packet.retain,\n    qos: packet.qos\n  };\n\n  console.log('newPacket published', newPacket);\n\n  // server.publish(newPacket, cb);\n}\n\n// fired whena client is connected\nserver.on('clientConnected', function(client) {\n  console.log('client connected', client.id);\n});\n// fired when a message is received\nserver.on('published', function(packet, client) {\n  console.log(' on Published  packet payload: ', packet.payload);\n});\n// fired when a client subscribes to a topic\nserver.on('subscribed', function(topic, client) {\n  console.log(' on subscribed : ', topic);\n});\n// fired when a client subscribes to a topic\nserver.on('unsubscribed', function(topic, client) {\n  console.log('unsubscribed : ', topic);\n});\n// fired when a client is disconnecting\nserver.on('clientDisconnecting', function(client) {\n  console.log('clientDisconnecting : ', client.id);\n});\n// fired when a client is disconnected\nserver.on('clientDisconnected', function(client) {\n  console.log('clientDisconnected : ', client.id);\n});"]}
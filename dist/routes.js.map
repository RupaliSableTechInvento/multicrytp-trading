{"version":3,"sources":["../src/routes.js"],"names":["routes","route","get","req","res","sendFile","resolve","__dirname","redirect","query","accessToken","post","login","register","forgetPassword","friendReq","addMessage","getUserInfo","addUserProfilePic","getAllMessagesWithFriend","getAllUnreadMessages","getFriendsList","acceptFriendRequest","changeEmail","setMsgRead","userProfile","getAll","getOne","put","update","delete","varifyToken","isVerified","getPriceEquation","emailVerification","emailVerified","create","patch","getByCurrencyLoc","getTrade","getQuickByCryptocurrency","recoverPassword","addUserInfo","storeBasicUserInfo","changePassword","getActiveUser","logout"],"mappings":"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","file":"routes.js","sourcesContent":["import usersController from './controller/usersController';\r\nimport tradeController from './controller/tradeController';\r\nimport authController from './controller/authController';\r\nimport messagesController from './controller/messagesController';\r\nimport path from 'path';\r\nconst routes = (route) => {\r\n\r\n  route.get('/', (req, res) => {\r\n    res.sendFile(path.resolve(__dirname + '/../client/' + 'index.html'));\r\n  });\r\n  route.get('#/', (req, res) => {\r\n    res.sendFile(path.resolve(__dirname + '/../client/' + 'index.html'));\r\n  });\r\n\r\n  /*   route.get('/recover', (req, res) => {\r\n      console.log(\"req\", req.query.accessToken)\r\n      res.redirect('/#/resetpassword?accessToken=' + req.query.accessToken);\r\n    }); */\r\n  route.get('/recover', (req, res) => {\r\n    // console.log(\"router.js in recover access token\", req.query.accessToken)\r\n    res.redirect('/#/recoverPassword?accessToken=' + req.query.accessToken);\r\n\r\n    // res.sendFile(path.resolve(__dirname + '/../client/assets/snippets/pages/user/' + 'recover.html'));\r\n  });\r\n\r\n\r\n  route.route('/login')\r\n    .post(authController.login);\r\n\r\n  route.route('/register')\r\n    .post(authController.register);\r\n\r\n  // route.route('/users')\r\n  // .get(usersController.getAll)\r\n  // .put(usersController.update);\r\n\r\n  route.route('/forgetPassword')\r\n    .post(usersController.forgetPassword);\r\n\r\n  // route.route('/friendReq')\r\n  //   .post(messagesController.friendReq);\r\n  route.route('/friendReq')\r\n    .post(usersController.friendReq)\r\n\r\n  route.route('/addMessage')\r\n    .post(usersController.addMessage)\r\n\r\n  route.route('/getUserInfo')\r\n    .get(usersController.getUserInfo)\r\n\r\n  route.route('/addUserProfilePic')\r\n    .post(usersController.addUserProfilePic)\r\n\r\n\r\n  route.route('/getAllMessagesWithFriend')\r\n    .get(usersController.getAllMessagesWithFriend)\r\n  route.route('/getAllUnreadMessages')\r\n    .get(usersController.getAllUnreadMessages)\r\n  route.route('/getFriendsList')\r\n    .get(usersController.getFriendsList);\r\n\r\n  route.route('/acceptFriendRequest')\r\n    .post(usersController.acceptFriendRequest);\r\n\r\n\r\n  route.route('/users/changeEmail')\r\n    .post(usersController.changeEmail);\r\n\r\n\r\n\r\n  route.route('/setMsgRead')\r\n    .post(usersController.setMsgRead);\r\n\r\n  route.route('/userProfile')\r\n    .get(usersController.userProfile)\r\n\r\n  route.route('/users')\r\n    //console.log(\"user=>>\", req)\r\n    .get(usersController.getAll)\r\n    //.delete(usersController.delete);\r\n\r\n  route.route('/seller')\r\n    .get(usersController.getOne)\r\n    .put(usersController.update)\r\n    .delete(usersController.delete);\r\n\r\n  route.route('/sellerBuyerInfo')\r\n    .get(tradeController.getOne);\r\n\r\n  route.route('/cp/:token')\r\n    .get(usersController.varifyToken);\r\n\r\n  route.route('/isVerified')\r\n    .get(usersController.isVerified);\r\n\r\n\r\n  route.route('/getPriceEquation')\r\n    .get(tradeController.getPriceEquation)\r\n  route.route('/emailverification')\r\n    .post(usersController.emailVerification);\r\n\r\n  route.route('/ev/:token')\r\n    .get(usersController.emailVerified);\r\n\r\n  route.route('/trade')\r\n    .get(tradeController.getAll)\r\n    .post(tradeController.create)\r\n    .patch(tradeController.update);\r\n\r\n  route.route('/tradeByCurrencyLoc')\r\n    .get(tradeController.getByCurrencyLoc);\r\n\r\n  route.route('/getTrade')\r\n    .get(tradeController.getTrade);\r\n\r\n\r\n\r\n  route.route('/getQuickByCryptocurrency')\r\n    .get(tradeController.getQuickByCryptocurrency);\r\n\r\n\r\n  route.route('/recoverPassword')\r\n    .post(usersController.recoverPassword);\r\n\r\n\r\n  route.route('/users/addUserInfo')\r\n    .post(usersController.addUserInfo);\r\n\r\n\r\n  route.route('/users/storeBasicUserInfo')\r\n    .post(usersController.storeBasicUserInfo);\r\n\r\n  route.route('/users/changePassword')\r\n    .post(usersController.changePassword);\r\n\r\n  route.route('/getActiveUser')\r\n    .get(authController.getActiveUser);\r\n\r\n  route.route('/logout')\r\n    .get(authController.logout)\r\n\r\n\r\n};\r\n\r\nexport default routes;"]}
{"version":3,"sources":["../src/routes.js"],"names":["routes","route","get","req","res","sendFile","resolve","__dirname","redirect","query","accessToken","post","login","register","forgetPassword","changeEmail","getAll","getOne","put","update","delete","varifyToken","emailVarification","emailVarified","create","patch","getByCurrencyLoc","recoverPassword","storeBasicUserInfo","changePassword","logout"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,SAAS,SAATA,MAAS,CAACC,KAAD,EAAW;AACxBA,QAAMC,GAAN,CAAU,GAAV,EAAe,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,QAAIC,QAAJ,CAAa,eAAKC,OAAL,CAAaC,YAAY,aAAZ,GAA4B,YAAzC,CAAb;AACD,GAFD;AAGAN,QAAMC,GAAN,CAAU,IAAV,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,QAAIC,QAAJ,CAAa,eAAKC,OAAL,CAAaC,YAAY,aAAZ,GAA4B,YAAzC,CAAb;AACD,GAFD;;AAIA;;;;AAIAN,QAAMC,GAAN,CAAU,UAAV,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC;AACAA,QAAII,QAAJ,CAAa,oCAAoCL,IAAIM,KAAJ,CAAUC,WAA3D;;AAEA;AACD,GALD;;AAQAT,QAAMA,KAAN,CAAY,QAAZ,EACGU,IADH,CACQ,yBAAeC,KADvB;;AAGAX,QAAMA,KAAN,CAAY,WAAZ,EACGU,IADH,CACQ,yBAAeE,QADvB;;AAGA;AACA;AACA;;AAEAZ,QAAMA,KAAN,CAAY,iBAAZ,EACGU,IADH,CACQ,0BAAgBG,cADxB;;AAIAb,QAAMA,KAAN,CAAY,oBAAZ,EACGU,IADH,CACQ,0BAAgBI,WADxB;;AAGAd,QAAMA,KAAN,CAAY,QAAZ;AACE;AADF,GAEGC,GAFH,CAEO,0BAAgBc,MAFvB;AAGE;AACA;;AAEFf,QAAMA,KAAN,CAAY,SAAZ,EACGC,GADH,CACO,0BAAgBe,MADvB,EAEGC,GAFH,CAEO,0BAAgBC,MAFvB,EAGGC,MAHH,CAGU,0BAAgBA,MAH1B;;AAKAnB,QAAMA,KAAN,CAAY,YAAZ,EACGC,GADH,CACO,0BAAgBmB,WADvB;;AAGApB,QAAMA,KAAN,CAAY,oBAAZ,EACGU,IADH,CACQ,0BAAgBW,iBADxB;;AAGArB,QAAMA,KAAN,CAAY,YAAZ,EACGC,GADH,CACO,0BAAgBqB,aADvB;;AAGAtB,QAAMA,KAAN,CAAY,QAAZ,EACGC,GADH,CACO,0BAAgBc,MADvB,EAEGL,IAFH,CAEQ,0BAAgBa,MAFxB,EAGGC,KAHH,CAGS,0BAAgBN,MAHzB;;AAKAlB,QAAMA,KAAN,CAAY,qBAAZ,EACGC,GADH,CACO,0BAAgBwB,gBADvB;;AAGAzB,QAAMA,KAAN,CAAY,kBAAZ,EACGU,IADH,CACQ,0BAAgBgB,eADxB;;AAGA1B,QAAMA,KAAN,CAAY,2BAAZ,EACGU,IADH,CACQ,0BAAgBiB,kBADxB;;AAGA3B,QAAMA,KAAN,CAAY,uBAAZ,EACGU,IADH,CACQ,0BAAgBkB,cADxB;AAEA5B,QAAMA,KAAN,CAAY,SAAZ,EACGC,GADH,CACO,yBAAe4B,MADtB;AAED,CA3ED;;kBA6Ee9B,M","file":"routes.js","sourcesContent":["import usersController from './controller/usersController';\r\nimport tradeController from './controller/tradeController';\r\nimport authController from './controller/authController';\r\nimport path from 'path';\r\nconst routes = (route) => {\r\n  route.get('/', (req, res) => {\r\n    res.sendFile(path.resolve(__dirname + '/../client/' + 'index.html'));\r\n  });\r\n  route.get('#/', (req, res) => {\r\n    res.sendFile(path.resolve(__dirname + '/../client/' + 'index.html'));\r\n  });\r\n\r\n  /*   route.get('/recover', (req, res) => {\r\n      console.log(\"req\", req.query.accessToken)\r\n      res.redirect('/#/resetpassword?accessToken=' + req.query.accessToken);\r\n    }); */\r\n  route.get('/recover', (req, res) => {\r\n    // console.log(\"router.js in recover access token\", req.query.accessToken)\r\n    res.redirect('/#/recoverPassword?accessToken=' + req.query.accessToken);\r\n\r\n    // res.sendFile(path.resolve(__dirname + '/../client/assets/snippets/pages/user/' + 'recover.html'));\r\n  });\r\n\r\n\r\n  route.route('/login')\r\n    .post(authController.login);\r\n\r\n  route.route('/register')\r\n    .post(authController.register);\r\n\r\n  // route.route('/users')\r\n  // .get(usersController.getAll)\r\n  // .put(usersController.update);\r\n\r\n  route.route('/forgetPassword')\r\n    .post(usersController.forgetPassword);\r\n\r\n\r\n  route.route('/users/changeEmail')\r\n    .post(usersController.changeEmail);\r\n\r\n  route.route('/users')\r\n    //console.log(\"user=>>\", req)\r\n    .get(usersController.getAll)\r\n    //.get(usersController.getOne)\r\n    //.delete(usersController.delete);\r\n\r\n  route.route('/seller')\r\n    .get(usersController.getOne)\r\n    .put(usersController.update)\r\n    .delete(usersController.delete);\r\n\r\n  route.route('/cp/:token')\r\n    .get(usersController.varifyToken);\r\n\r\n  route.route('/emailvarification')\r\n    .post(usersController.emailVarification);\r\n\r\n  route.route('/ev/:token')\r\n    .get(usersController.emailVarified);\r\n\r\n  route.route('/trade')\r\n    .get(tradeController.getAll)\r\n    .post(tradeController.create)\r\n    .patch(tradeController.update);\r\n\r\n  route.route('/tradeByCurrencyLoc')\r\n    .get(tradeController.getByCurrencyLoc)\r\n\r\n  route.route('/recoverPassword')\r\n    .post(usersController.recoverPassword);\r\n\r\n  route.route('/users/storeBasicUserInfo')\r\n    .post(usersController.storeBasicUserInfo);\r\n\r\n  route.route('/users/changePassword')\r\n    .post(usersController.changePassword);\r\n  route.route('/logout')\r\n    .get(authController.logout)\r\n};\r\n\r\nexport default routes;"]}